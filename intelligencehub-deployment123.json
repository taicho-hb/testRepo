{
  "productInfo" : {
    "company" : "HighByte",
    "product" : "IntelligenceHub",
    "version" : "4.2.0",
    "build" : "2025.5.27.202",
    "stage" : "Beta"
  },
  "project" : {
    "version" : 11,
    "connections" : [ {
      "name" : "MsiMessages",
      "uri" : "jdbc.sqlite://sQLite",
      "tags" : [ "PAS_X_MSI" ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "database" : "..\\appData\\MsiMessages.db",
        "strategy" : {
          "type" : "default"
        }
      }
    }, {
      "name" : "MsiRESTClient",
      "uri" : "rest.client://MSIRestClient",
      "tags" : [ "PAS_X_MSI" ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "authentication" : {
          "type" : "OAuth 2.0",
          "options" : {
            "grantType" : "password",
            "clientAuthenticationType" : "header",
            "loginURL" : "http://localhost:9000/getAccessToken",
            "username" : "user",
            "password" : {
              "type" : "Encrypted",
              "value" : {
                "keyId" : "0Tk3C1Xr1C5LAKQUMfk7Vw==",
                "iv" : "ZcD4GxgEEHhpDc+kKgshRg==",
                "ciphertext" : "EM2b+j8ommk5g7+Fazo6pg=="
              }
            }
          }
        },
        "baseURL" : "http://localhost:9000"
      }
    }, {
      "name" : "blob",
      "uri" : "azure.blob://blob",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "endpointURL" : "http://localhost:45245",
        "encryptConnectionString" : {
          "type" : "Encrypted",
          "value" : {
            "keyId" : "Dp0obeGROCSWdBQCrwgRPw==",
            "iv" : "Bn6m1L1roTZkIe//hNa7Kw==",
            "ciphertext" : "Mq9XlFWFDHbkP/SnaehQyQ=="
          }
        }
      }
    }, {
      "name" : "csv",
      "uri" : "file.csv://csv",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "directory" : "."
      }
    }, {
      "name" : "file",
      "uri" : "file://file",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "communicationProtocol" : {
          "type" : "FILE_PROTOCOL"
        },
        "directory" : "."
      }
    }, {
      "name" : "hmq",
      "uri" : "mqtt://1d6221d0f2b94b98aa97ce692f59d7a8.s1.eu.hivemq.cloud:8884",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "connectionTimeoutSeconds" : 10,
        "keepAliveSeconds" : 60,
        "requestTimeoutMS" : 5000,
        "maxInflight" : 1000,
        "cleanSession" : true,
        "username" : "taicho",
        "ssl" : true,
        "redundantBrokers" : [ ],
        "inputDiscovery" : "",
        "clientId" : "test",
        "password" : {
          "type" : "Encrypted",
          "value" : {
            "keyId" : "Dp0obeGROCSWdBQCrwgRPw==",
            "iv" : "KiBaQmIEiJJkuzDJY6/ksw==",
            "ciphertext" : "+xKwNfc9fcU0k83Yjs86fg=="
          }
        },
        "ignoreCertificate" : true
      }
    }, {
      "name" : "ig",
      "uri" : "inductive.ignition://localhost:45283",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "connectTimeoutSeconds" : 5,
        "requestTimeoutMS" : 30000,
        "compression" : "GZIP",
        "password" : {
          "type" : "Encrypted",
          "value" : {
            "keyId" : "vrBpcHOKKwwsQER6zmCP9g==",
            "iv" : "M+4YsGSuSMtBZj4Lb3IGJg==",
            "ciphertext" : "jZADMDMW599gcR2bpfChwA=="
          }
        }
      }
    }, {
      "name" : "mqtt",
      "uri" : "mqtt://0.0.0.0:1885",
      "tags" : [ "starter_solution" ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "connectionTimeoutSeconds" : 10,
        "keepAliveSeconds" : 60,
        "requestTimeoutMS" : 5000,
        "cleanSession" : true,
        "clientId" : "mqtt",
        "ssl" : false,
        "redundantBrokers" : [ ],
        "inputDiscovery" : "",
        "maxInflight" : 1000,
        "ignoreCertificate" : false,
        "caCert" : "app-certificate-private-key"
      }
    }, {
      "name" : "opc",
      "uri" : "opc.tcp://52.10.6.4:49320",
      "tags" : [ "starter_solution" ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : {
        "subscriptionRate" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "security" : "None",
        "authentication" : {
          "type" : "Anonymous"
        },
        "connectTimeoutSeconds" : 5,
        "requestTimeoutMS" : 5000,
        "maxItemsPerRead" : 512,
        "maxItemsPerWrite" : 256,
        "sessionName" : ""
      }
    }, {
      "name" : "opc_ig",
      "uri" : "opc.tcp://localhost:65250",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : {
        "subscriptionRate" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "security" : "None",
        "authentication" : {
          "type" : "Anonymous"
        },
        "connectTimeoutSeconds" : 5,
        "requestTimeoutMS" : 5000,
        "maxItemsPerRead" : 512,
        "maxItemsPerWrite" : 256
      }
    }, {
      "name" : "pi",
      "uri" : "osisoft.afsdk://localhost:45290",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "connectTimeoutSeconds" : 10,
        "requestTimeoutMS" : 300000,
        "compression" : "GZIP",
        "auth" : {
          "type" : "credentials",
          "username" : "osisoft",
          "password" : {
            "type" : "Encrypted",
            "value" : {
              "keyId" : "vrBpcHOKKwwsQER6zmCP9g==",
              "iv" : "xh6JUv+pQPWvoADWCtnyuw==",
              "ciphertext" : "ofsZYNhgNlNVdTH7BeSMQg=="
            }
          }
        },
        "password" : {
          "type" : "Encrypted",
          "value" : {
            "keyId" : "vrBpcHOKKwwsQER6zmCP9g==",
            "iv" : "R8iOKOmfRCWXtMqEKm6cbQ==",
            "ciphertext" : "wpiKde3YfQBoJ1HxoVAz5xSi5zBV7Hc06gBqmthh68c1jhHoOEUIpyM8xLpWY1K5"
          }
        }
      }
    }, {
      "name" : "piremote",
      "uri" : "osisoft.afsdk://44.237.170.95:45290",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "connectTimeoutSeconds" : 5,
        "requestTimeoutMS" : 30000,
        "compression" : "GZIP",
        "auth" : {
          "type" : "credentials",
          "username" : "osisoft",
          "password" : {
            "type" : "Encrypted",
            "value" : {
              "keyId" : "vrBpcHOKKwwsQER6zmCP9g==",
              "iv" : "q+/Txca5N8uJk0SphV3qyw==",
              "ciphertext" : "MCTETy7miSptdaNcXEzUDg=="
            }
          }
        },
        "password" : {
          "type" : "Encrypted",
          "value" : {
            "keyId" : "vrBpcHOKKwwsQER6zmCP9g==",
            "iv" : "BePtVHbEwkn7hK2WUAnhvQ==",
            "ciphertext" : "zyfqsbRrUBSx6cG2wD7fJQ=="
          }
        }
      }
    }, {
      "name" : "sql",
      "uri" : "jdbc.sqlserver://52.10.6.4:1433",
      "tags" : [ "starter_solution" ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "database" : "serviceinfo",
        "username" : "highbyte",
        "strategy" : {
          "type" : "default"
        },
        "connectString" : "password=password"
      }
    }, {
      "name" : "sql_mes",
      "uri" : "jdbc.sqlserver://52.10.6.4:1433",
      "tags" : [ "starter_solution" ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "database" : "mes",
        "username" : "highbyte",
        "strategy" : {
          "type" : "default"
        },
        "connectString" : "password=password"
      }
    }, {
      "name" : "webh",
      "uri" : "rest.client://webh",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "authentication" : {
          "type" : "None"
        },
        "baseURL" : "https://webhook.site/03439e40-fee2-458e-a441-8bfc0072223b"
      }
    }, {
      "name" : "wh",
      "uri" : "webhook.server://wh:9001",
      "tags" : [ ],
      "writes" : {
        "flattenModeledValues" : false
      },
      "subscriptions" : { },
      "storeForward" : {
        "enabled" : false,
        "maxEntries" : 100,
        "waitOnFailureInterval" : {
          "duration" : 1,
          "units" : "Seconds"
        }
      },
      "settings" : {
        "scheme" : "http",
        "authorizationType" : "Bearer",
        "authorizationToken" : "test123"
      }
    } ],
    "conditions" : [ {
      "name" : "test",
      "uri" : "condition.custom",
      "tags" : [ ],
      "settings" : {
        "inReferences" : [ "{{Connection.opc.Motor001_PLC_param}}" ],
        "expression" : "{{this.currentValue}}"
      }
    }, {
      "name" : "test_copy",
      "uri" : "condition.custom",
      "tags" : [ ],
      "settings" : {
        "inReferences" : [ "{{Connection.opc.Motor001_PLC_param}}" ],
        "expression" : "{{this.currentValue}}"
      }
    } ],
    "inputs" : [ {
      "name" : "ClosedOrderParameterMessages",
      "connection" : "MsiMessages",
      "type" : "jdbc.sqlite",
      "qualifier" : {
        "query" : "select * from Messages where Status = 'Closed'"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "DeleteOrderParameterMessages",
      "connection" : "MsiMessages",
      "type" : "jdbc.sqlite",
      "qualifier" : {
        "query" : "delete from Messages where _id = {{this._id}}"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "inline",
        "model" : {
          "name" : "params",
          "tags" : [ ],
          "attributes" : [ {
            "attributeType" : "Internal",
            "name" : "_id",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "defaultValue" : "{{this._id}}",
            "internalType" : "String"
          } ]
        }
      }
    }, {
      "name" : "ErrorOrderParameterMessages",
      "connection" : "MsiMessages",
      "type" : "jdbc.sqlite",
      "qualifier" : {
        "query" : "select * from Messages where status = 'Error'"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "InProcessOrderParameterMessages",
      "connection" : "MsiMessages",
      "type" : "jdbc.sqlite",
      "qualifier" : {
        "query" : "select * from Messages where Status = 'Inprocess' ORDER BY _timestamp "
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "OpenOrderParameterMessages",
      "connection" : "MsiMessages",
      "type" : "jdbc.sqlite",
      "qualifier" : {
        "query" : "select * from Messages where Status = 'Open' ORDER BY _timestamp LIMIT 1"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "Site1",
      "connection" : "mqtt",
      "type" : "mqtt",
      "qualifier" : {
        "inputType" : "LastPublish",
        "includeTopic" : false,
        "payloadType" : "any",
        "topic" : "Site1/#"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "Site1_Area1_Line1_assets_motors_Motor001",
      "connection" : "mqtt",
      "type" : "mqtt",
      "qualifier" : {
        "inputType" : "LastPublish",
        "includeTopic" : false,
        "payloadType" : "any",
        "topic" : "Site1/Area1/Line1/assets/motors/Motor001 /#"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "Site1_Area1_Line1_assets_motors_Motor002",
      "connection" : "mqtt",
      "type" : "mqtt",
      "qualifier" : {
        "inputType" : "LastPublish",
        "includeTopic" : false,
        "payloadType" : "any",
        "topic" : "Site1/Area1/Line1/assets/motors/Motor002 /#"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "Site1_Area1_Line1_assets_motors_Motor003",
      "connection" : "mqtt",
      "type" : "mqtt",
      "qualifier" : {
        "inputType" : "LastPublish",
        "includeTopic" : false,
        "payloadType" : "any",
        "topic" : "Site1/Area1/Line1/assets/motors/Motor003 /#"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "Site1_Area1_Line1_assets_motors_Motor004",
      "connection" : "mqtt",
      "type" : "mqtt",
      "qualifier" : {
        "inputType" : "LastPublish",
        "includeTopic" : false,
        "payloadType" : "any",
        "topic" : "Site1/Area1/Line1/assets/motors/Motor004 /#"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "BUILD1",
      "connection" : "opc",
      "type" : "opc.tcp",
      "qualifier" : {
        "namespaceIndex" : 2,
        "identifierType" : "String",
        "identifier" : "BUILD1",
        "dataType" : "Auto",
        "type" : "Branch",
        "maxDepth" : 1,
        "cacheInterval" : {
          "duration" : 1,
          "units" : "Hours"
        },
        "ignoreBadQuality" : false,
        "browseVariableNodes" : false,
        "isComplex" : false
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "Motor001_PLC",
      "connection" : "opc",
      "type" : "opc.tcp",
      "qualifier" : {
        "namespaceIndex" : 2,
        "identifierType" : "String",
        "identifier" : "Motor{{this.motorNumber}}.PLC",
        "dataType" : "Auto",
        "type" : "Branch",
        "maxDepth" : 0,
        "cacheInterval" : {
          "duration" : 1,
          "units" : "Hours"
        },
        "ignoreBadQuality" : false,
        "browseVariableNodes" : false,
        "isComplex" : false
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "name" : "Motor{{this.motorNumber}}",
        "type" : "Static",
        "params" : [ {
          "name" : "motorNumber",
          "pattern" : "001-005"
        } ]
      },
      "parameters" : {
        "type" : "inline",
        "model" : {
          "name" : "params",
          "tags" : [ ],
          "attributes" : [ {
            "attributeType" : "Internal",
            "name" : "motorNumber",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "defaultValue" : "001",
            "internalType" : "String"
          } ]
        }
      }
    }, {
      "name" : "Motor001_PLC_Amps",
      "connection" : "opc",
      "type" : "opc.tcp",
      "qualifier" : {
        "namespaceIndex" : 2,
        "identifierType" : "String",
        "identifier" : "Motor001.PLC.Amps",
        "type" : "Tag",
        "dataType" : "UInt32",
        "samplingInterval" : {
          "duration" : 0,
          "units" : "Seconds"
        }
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "Motor001_PLC_Error",
      "connection" : "opc",
      "type" : "opc.tcp",
      "qualifier" : {
        "namespaceIndex" : 2,
        "identifierType" : "String",
        "identifier" : "Motor001.PLC.Error",
        "type" : "Tag",
        "dataType" : "String"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "Motor001_PLC_Speed",
      "connection" : "opc",
      "type" : "opc.tcp",
      "qualifier" : {
        "namespaceIndex" : 2,
        "identifierType" : "String",
        "identifier" : "Motor001.PLC.Speed",
        "type" : "Tag",
        "dataType" : "UInt32"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "Motor001_PLC_Vibration",
      "connection" : "opc",
      "type" : "opc.tcp",
      "qualifier" : {
        "namespaceIndex" : 2,
        "identifierType" : "String",
        "identifier" : "Motor001.PLC.Vibration",
        "type" : "Tag",
        "dataType" : "Real64"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "Motor001_PLC_param",
      "connection" : "opc",
      "type" : "opc.tcp",
      "qualifier" : {
        "namespaceIndex" : 2,
        "identifierType" : "String",
        "identifier" : "Motor{{this.number}}.PLC",
        "type" : "Branch",
        "dataType" : "UInt32",
        "samplingInterval" : {
          "duration" : 0,
          "units" : "Seconds"
        },
        "isComplex" : false,
        "maxDepth" : 0,
        "cacheInterval" : {
          "duration" : 1,
          "units" : "Hours"
        },
        "ignoreBadQuality" : false,
        "browseVariableNodes" : false
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off",
        "params" : [ {
          "name" : "number",
          "pattern" : "001-3"
        } ]
      },
      "parameters" : {
        "type" : "inline",
        "model" : {
          "name" : "params",
          "tags" : [ ],
          "attributes" : [ {
            "attributeType" : "Internal",
            "name" : "number",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "defaultValue" : "001",
            "internalType" : "String"
          } ]
        }
      }
    }, {
      "name" : "MotorXXX_PLC",
      "connection" : "opc",
      "type" : "opc.tcp",
      "qualifier" : {
        "namespaceIndex" : 2,
        "identifierType" : "String",
        "identifier" : "Motor{{this.motorNumber}}.PLC.Amps",
        "dataType" : "Auto",
        "type" : "Tag",
        "maxDepth" : 0,
        "cacheInterval" : {
          "duration" : 1,
          "units" : "Hours"
        },
        "ignoreBadQuality" : false,
        "browseVariableNodes" : false,
        "samplingInterval" : {
          "duration" : 0,
          "units" : "Seconds"
        }
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "name" : "Motor{{this.motorNumber}}",
        "type" : "Static",
        "params" : [ {
          "name" : "motorNumber",
          "pattern" : "001-5"
        } ]
      },
      "parameters" : {
        "type" : "inline",
        "model" : {
          "name" : "params",
          "tags" : [ ],
          "attributes" : [ {
            "attributeType" : "Internal",
            "name" : "motorNumber",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "defaultValue" : "001",
            "internalType" : "String"
          } ]
        }
      }
    }, {
      "name" : "MotorXXX_PLC_XXX",
      "connection" : "opc",
      "type" : "opc.tcp",
      "qualifier" : {
        "namespaceIndex" : 2,
        "identifierType" : "String",
        "identifier" : "Motor{{this.number}}.PLC.{{this.metric}}",
        "type" : "Tag",
        "dataType" : "UInt32",
        "samplingInterval" : {
          "duration" : 0,
          "units" : "Seconds"
        },
        "isComplex" : true
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off",
        "params" : [ {
          "name" : "number",
          "pattern" : ""
        }, {
          "name" : "metric",
          "pattern" : ""
        } ]
      },
      "parameters" : {
        "type" : "inline",
        "model" : {
          "name" : "params",
          "tags" : [ ],
          "attributes" : [ {
            "attributeType" : "Internal",
            "name" : "number",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "internalType" : "String"
          }, {
            "attributeType" : "Internal",
            "name" : "metric",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "internalType" : "String"
          } ]
        }
      }
    }, {
      "name" : "METADATA_NG_TEST_2",
      "connection" : "pi",
      "type" : "osisoft.afsdk",
      "qualifier" : {
        "type" : "point",
        "options" : {
          "get" : "currentValue",
          "includeMetaData" : true,
          "includeChildren" : true,
          "useReference" : false,
          "points" : [ "SINUSOID" ],
          "additionalMetadataProperties" : [ "excdev", "future", "changedate" ],
          "query" : "",
          "index" : false,
          "indexWindow" : ""
        }
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "WellDowntimeDemo_West_Texas",
      "connection" : "pi",
      "type" : "osisoft.afsdk",
      "qualifier" : {
        "type" : "asset",
        "options" : {
          "database" : "WellDowntimeDemo",
          "query" : "Name: 'West Texas' Parent: ''",
          "get" : "currentValue",
          "index" : false,
          "includeMetaData" : false,
          "includeChildren" : false
        }
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "demoReadTest",
      "connection" : "pi",
      "type" : "osisoft.afsdk",
      "qualifier" : {
        "type" : "point",
        "options" : {
          "get" : "currentValue",
          "includeMetaData" : true,
          "includeChildren" : true,
          "useReference" : false,
          "points" : [ "demo.crusher.crushRate" ],
          "query" : "",
          "index" : false,
          "indexWindow" : ""
        }
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "test",
      "connection" : "pi",
      "type" : "osisoft.afsdk",
      "qualifier" : {
        "type" : "eventframe",
        "options" : {
          "get" : "currentValue",
          "includeMetaData" : false,
          "includeChildren" : true,
          "database" : "ReactorsDemo",
          "query" : "Template:\"Downtime\"",
          "index" : false,
          "indexWindow" : ""
        }
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "test",
      "connection" : "piremote",
      "type" : "osisoft.afsdk",
      "qualifier" : {
        "type" : "eventframe",
        "options" : {
          "get" : "currentValue",
          "includeMetaData" : false,
          "includeChildren" : true,
          "database" : "ReactorsDemo",
          "query" : "Template:\"Downtime\"",
          "index" : false,
          "indexWindow" : ""
        }
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "get_motor001_service_info",
      "connection" : "sql",
      "type" : "jdbc.sqlserver",
      "qualifier" : {
        "type" : "query",
        "query" : "SELECT * FROM [dbo].[lastservice] WHERE [dbo].[lastservice].[machineid] = 'motor001'",
        "index" : {
          "enabled" : false,
          "indexName" : "",
          "indexValue" : ""
        }
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "get_motor001_service_info_copy",
      "connection" : "sql",
      "type" : "jdbc.sqlserver",
      "qualifier" : {
        "type" : "query",
        "query" : "SELECT * FROM [dbo].[lastservice] WHERE [dbo].[lastservice].[machineid] = '{{this.motorId}}'",
        "index" : {
          "enabled" : false,
          "indexName" : "",
          "indexValue" : ""
        }
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off",
        "params" : [ {
          "name" : "motorId",
          "pattern" : "MOTOR004"
        } ]
      },
      "parameters" : {
        "type" : "inline",
        "model" : {
          "name" : "params",
          "tags" : [ ],
          "attributes" : [ {
            "attributeType" : "Internal",
            "name" : "motorId",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "defaultValue" : "MOTOR001",
            "internalType" : "String"
          } ]
        }
      }
    }, {
      "name" : "test",
      "connection" : "sql",
      "type" : "jdbc.sqlserver",
      "qualifier" : {
        "type" : "query",
        "query" : "select * from [dbo].[cmms_servicelogs]"
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "test",
      "connection" : "sql_mes",
      "type" : "jdbc.sqlserver",
      "qualifier" : {
        "type" : "query",
        "query" : "select * from [dbo].[WorkOrderInfo]",
        "index" : {
          "enabled" : false,
          "indexName" : "",
          "indexValue" : ""
        }
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    }, {
      "name" : "test",
      "connection" : "webh",
      "type" : "rest.client",
      "qualifier" : {
        "acceptType" : "*/*",
        "method" : "POST",
        "contentType" : "application/json",
        "includeMetadata" : false,
        "body" : "{{this.p}}",
        "endpointURL" : "/",
        "isFile" : false
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off",
        "params" : [ {
          "name" : "p",
          "pattern" : ""
        } ]
      },
      "parameters" : {
        "type" : "inline",
        "model" : {
          "name" : "params",
          "tags" : [ ],
          "attributes" : [ {
            "attributeType" : "Internal",
            "name" : "p",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "defaultValue" : 2,
            "internalType" : "String"
          } ]
        }
      }
    }, {
      "name" : "test",
      "connection" : "wh",
      "type" : "webhook.server",
      "qualifier" : {
        "includeMetadata" : false
      },
      "cacheLifetime" : {
        "enabled" : false
      },
      "template" : {
        "type" : "Off"
      },
      "parameters" : {
        "type" : "EmptyParameters"
      }
    } ],
    "outputs" : [ {
      "name" : "test",
      "connection" : "MsiMessages",
      "type" : "jdbc.sqlite",
      "qualifier" : {
        "writeType" : "insert",
        "createOption" : "off",
        "tableCacheInterval" : {
          "duration" : 1,
          "units" : "Hours"
        },
        "breakupArrays" : false,
        "table" : "test"
      }
    }, {
      "name" : "PostMessage",
      "connection" : "MsiRESTClient",
      "type" : "rest.client",
      "qualifier" : {
        "method" : "POST",
        "bodyType" : "raw",
        "breakupArrays" : false,
        "endpointURL" : "/PostMessage",
        "template" : "${value[1..value?length - 2]}",
        "header" : [ {
          "name" : "Content-Type",
          "value" : "application/xml"
        } ]
      }
    }, {
      "name" : "test",
      "connection" : "file",
      "type" : "file",
      "qualifier" : {
        "breakupArrays" : false,
        "fileName" : "test.txt"
      }
    }, {
      "name" : "test",
      "connection" : "hmq",
      "type" : "mqtt",
      "qualifier" : {
        "qos" : 0,
        "namedRoot" : false,
        "breakupArrays" : false,
        "topic" : "test"
      }
    }, {
      "name" : "test",
      "connection" : "mqtt",
      "type" : "mqtt",
      "qualifier" : {
        "qos" : 0,
        "namedRoot" : false,
        "breakupArrays" : false,
        "topic" : "test"
      }
    }, {
      "name" : "Motor001",
      "connection" : "opc",
      "type" : "opc.tcp",
      "qualifier" : {
        "namespaceIndex" : 2,
        "identifierType" : "String",
        "identifier" : "Motor001",
        "dataType" : "Auto",
        "type" : "Branch",
        "maxDepth" : 1,
        "cacheInterval" : {
          "duration" : 1,
          "units" : "Hours"
        },
        "ignoreBadQuality" : false,
        "browseVariableNodes" : false,
        "namedRoot" : false
      }
    } ],
    "modeling" : {
      "models" : [ {
        "name" : "MsiOrderParameterMessage",
        "tags" : [ "PAS_X_MSI" ],
        "attributes" : [ {
          "attributeType" : "Object",
          "name" : "MsiOrderParameterMessage",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "attributes" : [ {
            "attributeType" : "Internal",
            "name" : "messageInstanceId",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "internalType" : "Any"
          }, {
            "attributeType" : "Internal",
            "name" : "direction",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "internalType" : "Any"
          }, {
            "attributeType" : "Internal",
            "name" : "messageId",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "internalType" : "Any"
          }, {
            "attributeType" : "Internal",
            "name" : "supplierId",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "internalType" : "Any"
          }, {
            "attributeType" : "Internal",
            "name" : "deviceTypeId",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "internalType" : "Any"
          }, {
            "attributeType" : "Internal",
            "name" : "supplierVersion",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "internalType" : "Real64"
          }, {
            "attributeType" : "Internal",
            "name" : "functionalId",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "internalType" : "Any"
          }, {
            "attributeType" : "Internal",
            "name" : "orderContext",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "internalType" : "Any"
          }, {
            "attributeType" : "Internal",
            "name" : "creationTime",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "internalType" : "Any"
          }, {
            "attributeType" : "Modeled",
            "name" : "BatchNo",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "model" : "ParameterString"
          }, {
            "attributeType" : "Modeled",
            "name" : "DeviceNo",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "model" : "ParameterString"
          }, {
            "attributeType" : "Modeled",
            "name" : "Weight",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "model" : "ParameterFloat"
          } ]
        } ]
      }, {
        "name" : "ParameterFloat",
        "tags" : [ "PAS_X_MSI" ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "name",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        }, {
          "attributeType" : "Internal",
          "name" : "dataType",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        }, {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Real32"
        }, {
          "attributeType" : "Internal",
          "name" : "isQualifier",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        }, {
          "attributeType" : "Internal",
          "name" : "acquisitionTime",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        } ]
      }, {
        "name" : "ParameterString",
        "tags" : [ "PAS_X_MSI" ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "name",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        }, {
          "attributeType" : "Internal",
          "name" : "dataType",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        }, {
          "attributeType" : "Internal",
          "name" : "value",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "String"
        }, {
          "attributeType" : "Internal",
          "name" : "isQualifier",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        }, {
          "attributeType" : "Internal",
          "name" : "acquisitionTime",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        } ]
      }, {
        "name" : "Publish",
        "tags" : [ "PAS_X_MSI" ],
        "attributes" : [ {
          "attributeType" : "Object",
          "name" : "MsiMessageContainer",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "attributes" : [ {
            "attributeType" : "Internal",
            "name" : "messageInstanceId",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "internalType" : "Any"
          }, {
            "attributeType" : "Internal",
            "name" : "direction",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "internalType" : "Any"
          }, {
            "attributeType" : "Internal",
            "name" : "systemId",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "internalType" : "Any"
          }, {
            "attributeType" : "Internal",
            "name" : "messageType",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "internalType" : "Any"
          }, {
            "attributeType" : "Internal",
            "name" : "messageContext",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "internalType" : "Any"
          }, {
            "attributeType" : "Modeled",
            "name" : "message",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "model" : "MsiOrderParameterMessage"
          } ]
        } ]
      }, {
        "name" : "Request",
        "tags" : [ "PAS_X_MSI" ],
        "attributes" : [ {
          "attributeType" : "Object",
          "name" : "MsiMessageContainer",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "attributes" : [ {
            "attributeType" : "Internal",
            "name" : "messageInstanceId",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "internalType" : "Any"
          }, {
            "attributeType" : "Internal",
            "name" : "direction",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "internalType" : "Any"
          }, {
            "attributeType" : "Internal",
            "name" : "systemId",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "internalType" : "Any"
          }, {
            "attributeType" : "Internal",
            "name" : "messageType",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "internalType" : "Any"
          }, {
            "attributeType" : "Internal",
            "name" : "messageContext",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "internalType" : "Any"
          }, {
            "attributeType" : "Modeled",
            "name" : "message",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "model" : "MsiOrderParameterMessage"
          } ]
        } ]
      }, {
        "name" : "TransferResult",
        "tags" : [ "PAS_X_MSI" ],
        "attributes" : [ {
          "attributeType" : "Object",
          "name" : "TransferResult",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "attributes" : [ {
            "attributeType" : "Internal",
            "name" : "MsgInstanceId",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "internalType" : "Any"
          }, {
            "attributeType" : "Internal",
            "name" : "SystemId",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "internalType" : "String"
          }, {
            "attributeType" : "Internal",
            "name" : "Success",
            "nullable" : false,
            "required" : false,
            "array" : false,
            "internalType" : "Boolean"
          }, {
            "attributeType" : "Internal",
            "name" : "Error",
            "nullable" : true,
            "required" : false,
            "array" : false,
            "internalType" : "String"
          } ]
        } ]
      }, {
        "name" : "motor",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "ID",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        }, {
          "attributeType" : "Internal",
          "name" : "Error",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        }, {
          "attributeType" : "Internal",
          "name" : "Amps",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        }, {
          "attributeType" : "Internal",
          "name" : "Speed",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        }, {
          "attributeType" : "Internal",
          "name" : "Vibration",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        } ]
      }, {
        "name" : "motorModel",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "standardatt1",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        }, {
          "attributeType" : "Internal",
          "name" : "stanadardatt2",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        } ]
      }, {
        "name" : "motors",
        "tags" : [ "starter_solution" ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "motorId",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        }, {
          "attributeType" : "Internal",
          "name" : "site",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        }, {
          "attributeType" : "Internal",
          "name" : "area",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        }, {
          "attributeType" : "Internal",
          "name" : "line",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        }, {
          "attributeType" : "Internal",
          "name" : "amps",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        }, {
          "attributeType" : "Internal",
          "name" : "speed",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        }, {
          "attributeType" : "Internal",
          "name" : "vibration",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        }, {
          "attributeType" : "Internal",
          "name" : "error",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        }, {
          "attributeType" : "Internal",
          "name" : "lastServiceDate",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "DateTime"
        }, {
          "attributeType" : "Internal",
          "name" : "lastServiceNotes",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        } ]
      }, {
        "name" : "test",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "test1",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        } ]
      }, {
        "name" : "testInit",
        "tags" : [ ],
        "attributes" : [ {
          "attributeType" : "Internal",
          "name" : "test",
          "nullable" : false,
          "required" : false,
          "array" : false,
          "internalType" : "Any"
        } ]
      } ],
      "instances" : [ {
        "name" : "motor001",
        "tags" : [ "starter_solution" ],
        "model" : "motors",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off"
        },
        "executeMode" : "V4",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "motorId",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "pick" : ""
            }
          },
          "defaultValue" : "motor001"
        }, {
          "name" : "site",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "pick" : ""
            }
          },
          "defaultValue" : "Portland"
        }, {
          "name" : "area",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "pick" : ""
            }
          },
          "defaultValue" : "Area-1"
        }, {
          "name" : "line",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "pick" : ""
            }
          },
          "defaultValue" : "Line-1"
        }, {
          "name" : "amps",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Input",
              "name" : "Motor001_PLC_Amps",
              "params" : { },
              "pick" : "",
              "connectionName" : "opc"
            }
          }
        }, {
          "name" : "speed",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Input",
              "name" : "Motor001_PLC_Speed",
              "params" : { },
              "pick" : "",
              "connectionName" : "opc"
            }
          }
        }, {
          "name" : "vibration",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Input",
              "name" : "Motor001_PLC_Vibration",
              "params" : { },
              "pick" : "",
              "connectionName" : "opc"
            }
          }
        }, {
          "name" : "error",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Input",
              "name" : "Motor001_PLC_Error",
              "params" : { },
              "pick" : "",
              "connectionName" : "opc"
            }
          }
        }, {
          "name" : "lastServiceDate",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Input",
              "name" : "get_motor001_service_info",
              "params" : { },
              "pick" : "[0].lastservicedate",
              "connectionName" : "sql"
            }
          }
        }, {
          "name" : "lastServiceNotes",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Input",
              "name" : "get_motor001_service_info",
              "params" : { },
              "pick" : "[0].Notes",
              "connectionName" : "sql"
            }
          }
        } ],
        "parameters" : {
          "type" : "EmptyParameters"
        }
      }, {
        "name" : "motorXXX",
        "tags" : [ "starter_solution" ],
        "model" : "motors",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Static",
          "params" : [ {
            "name" : "number",
            "pattern" : "003"
          }, {
            "name" : "metric",
            "pattern" : "Amps"
          } ]
        },
        "executeMode" : "V4",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "motorId",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "pick" : ""
            }
          },
          "defaultValue" : "motor001"
        }, {
          "name" : "site",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "pick" : ""
            }
          },
          "defaultValue" : "Portland"
        }, {
          "name" : "area",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "pick" : ""
            }
          },
          "defaultValue" : "Area-1"
        }, {
          "name" : "line",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "pick" : ""
            }
          },
          "defaultValue" : "Line-1"
        }, {
          "name" : "amps",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Input",
              "name" : "MotorXXX_PLC_XXX",
              "params" : {
                "number" : "{{this.number}}",
                "metric" : "{{this.metric}}"
              },
              "pick" : "",
              "connectionName" : "opc"
            }
          }
        }, {
          "name" : "speed",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "pick" : ""
            }
          }
        }, {
          "name" : "vibration",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "pick" : ""
            }
          }
        }, {
          "name" : "error",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Empty",
              "name" : "",
              "params" : { },
              "pick" : ""
            }
          }
        }, {
          "name" : "lastServiceDate",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Input",
              "name" : "get_motor001_service_info",
              "params" : { },
              "pick" : "[0].lastservicedate",
              "connectionName" : "sql"
            }
          }
        }, {
          "name" : "lastServiceNotes",
          "expression" : {
            "type" : "Reference",
            "reference" : {
              "type" : "Input",
              "name" : "get_motor001_service_info",
              "params" : { },
              "pick" : "[0].Notes",
              "connectionName" : "sql"
            }
          }
        } ],
        "parameters" : {
          "type" : "inline",
          "model" : {
            "name" : "params",
            "tags" : [ ],
            "attributes" : [ {
              "attributeType" : "Internal",
              "name" : "number",
              "nullable" : false,
              "required" : false,
              "array" : false,
              "internalType" : "String"
            }, {
              "attributeType" : "Internal",
              "name" : "metric",
              "nullable" : false,
              "required" : false,
              "array" : false,
              "internalType" : "String"
            } ]
          }
        }
      }, {
        "name" : "testInit_Instance",
        "tags" : [ ],
        "model" : "testInit",
        "rootValueAs" : "Object",
        "template" : {
          "type" : "Off",
          "params" : [ {
            "name" : "p",
            "pattern" : ""
          } ]
        },
        "executeMode" : "V4",
        "initExpression" : "",
        "attributes" : [ {
          "name" : "test",
          "expression" : {
            "type" : "JavaScript",
            "expression" : "//let x1 = 234;\r\nlet obj = {\"p\":123};\r\nreturn `{{Connection.webh.test(${obj})}}`;"
          }
        } ],
        "parameters" : {
          "type" : "inline",
          "model" : {
            "name" : "params",
            "tags" : [ ],
            "attributes" : [ {
              "attributeType" : "Internal",
              "name" : "p",
              "nullable" : false,
              "required" : false,
              "array" : false,
              "defaultValue" : 1,
              "internalType" : "String"
            } ]
          }
        }
      } ]
    },
    "pipelines" : [ {
      "name" : "DbToHttp",
      "tags" : [ ],
      "inputStages" : [ "LoadIndex" ],
      "stages" : [ {
        "name" : "ReadDbWithCycleTime",
        "display" : {
          "position" : {
            "x" : 690,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".ReadConfig",
          "failureOutputs" : [ ],
          "reference" : {
            "type" : "Input",
            "name" : "test",
            "params" : { },
            "pick" : "",
            "connectionName" : "sql_mes"
          }
        },
        "outputs" : [ "WriteToHttp" ]
      }, {
        "name" : "LoadIndex",
        "display" : {
          "position" : {
            "x" : 240,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "stage.setValue(event.value);"
        },
        "outputs" : [ "ReadDbWithCycleTime" ]
      }, {
        "name" : "WriteToHttp",
        "display" : {
          "position" : {
            "x" : 1140,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.webh}}",
          "qualifier" : {
            "endpointURL" : "/dmz",
            "method" : "POST",
            "bodyType" : "defaultjson",
            "breakupArrays" : false
          },
          "qualifierExpression" : "",
          "writeReturn" : "completion"
        },
        "outputs" : [ "UpdateIndex" ]
      }, {
        "name" : "UpdateIndex",
        "display" : {
          "position" : {
            "x" : 1590,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "stage.setValue(event.value);"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "PolledTrigger",
        "display" : {
          "position" : {
            "x" : -450,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".TriggerPolled",
          "enabled" : false,
          "interval" : {
            "duration" : 1,
            "units" : "Seconds"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "DeleteClosedOrderParameterMessages",
      "tags" : [ "PAS_X_MSI" ],
      "inputStages" : [ "ReadClosed" ],
      "stages" : [ {
        "name" : "ReadClosed",
        "display" : {
          "position" : {
            "x" : 240,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".ReadSourcesConfig",
          "failureOutputs" : [ ],
          "keyReferences" : [ {
            "location" : "child",
            "key" : "Closed",
            "reference" : "{{Connection.MsiMessages.ClosedOrderParameterMessages}}"
          } ],
          "inputValueLocation" : "exclude",
          "inputValueKey" : "eventIn"
        },
        "outputs" : [ "ClosedToRoot" ]
      }, {
        "name" : "DeleteMessages",
        "display" : {
          "position" : {
            "x" : 1590,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".ReadSourcesConfig",
          "failureOutputs" : [ ],
          "keyReferences" : [ {
            "location" : "inline",
            "key" : "Source1",
            "reference" : "{{Connection.MsiMessages.DeleteOrderParameterMessages({\"_id\":\"{{event.value._id}}\"})}}"
          } ],
          "inputValueLocation" : "exclude",
          "inputValueKey" : "eventIn"
        },
        "outputs" : [ ]
      }, {
        "name" : "Breakup",
        "display" : {
          "position" : {
            "x" : 1140,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".BreakupConfig",
          "breakupType" : "array"
        },
        "outputs" : [ "DeleteMessages" ]
      }, {
        "name" : "ClosedToRoot",
        "display" : {
          "position" : {
            "x" : 690,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "stage.setValue(event.value.Closed);"
        },
        "outputs" : [ "Breakup" ]
      } ],
      "trackActivity" : true,
      "triggers" : [ {
        "name" : "CronTrigger",
        "display" : {
          "position" : {
            "x" : -419,
            "y" : -1
          }
        },
        "config" : {
          "type" : ".TriggerCron",
          "enabled" : false,
          "logging" : "off",
          "schedule" : "*/30 * * * *",
          "timezone" : "utc"
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "EventModel",
      "tags" : [ ],
      "inputStages" : [ "Read" ],
      "stages" : [ {
        "name" : "Read",
        "display" : {
          "position" : {
            "x" : 210,
            "y" : 8
          }
        },
        "config" : {
          "type" : ".ReadConfig",
          "failureOutputs" : [ ],
          "reference" : {
            "type" : "Instance",
            "name" : "motor001",
            "params" : { },
            "pick" : ""
          }
        },
        "outputs" : [ "Transform" ]
      }, {
        "name" : "Transform",
        "display" : {
          "position" : {
            "x" : 718,
            "y" : 68
          }
        },
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "stage.setValue(event);"
        },
        "outputs" : [ "Transform_1" ]
      }, {
        "name" : "Transform_1",
        "display" : {
          "position" : {
            "x" : 1133,
            "y" : 108
          }
        },
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "stage.setValue(event.value);"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "HttpToDatalake",
      "tags" : [ ],
      "inputStages" : [ "LoadPreviousRecord" ],
      "stages" : [ {
        "name" : "ReturnHttpResponse",
        "display" : {
          "position" : {
            "x" : 1588,
            "y" : 241
          }
        },
        "config" : {
          "type" : ".ReturnConfig"
        },
        "outputs" : [ ]
      }, {
        "name" : "ReadERP",
        "display" : {
          "position" : {
            "x" : -218,
            "y" : 233
          }
        },
        "config" : {
          "type" : ".ReadConfig",
          "failureOutputs" : [ ],
          "reference" : {
            "type" : "Input",
            "name" : "test",
            "params" : { },
            "pick" : "",
            "connectionName" : "wh"
          }
        },
        "outputs" : [ "ModelPayload" ]
      }, {
        "name" : "ModelPayload",
        "display" : {
          "position" : {
            "x" : 235,
            "y" : 243
          }
        },
        "config" : {
          "type" : ".ModelConfig",
          "model" : "motorModel",
          "objectName" : "",
          "initExpression" : "",
          "attributes" : [ {
            "name" : "standardatt1",
            "expression" : {
              "type" : "JavaScript",
              "expression" : ""
            }
          }, {
            "name" : "stanadardatt2",
            "expression" : {
              "type" : "JavaScript",
              "expression" : ""
            }
          } ]
        },
        "outputs" : [ "WriteToDataLake" ]
      }, {
        "name" : "WriteToDataLake",
        "display" : {
          "position" : {
            "x" : 680,
            "y" : 245
          }
        },
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.blob}}",
          "qualifier" : {
            "containerName" : "test",
            "utcTimePathPrefix" : false,
            "breakupArrays" : false,
            "blobName" : "test"
          },
          "qualifierExpression" : "",
          "writeReturn" : "completion"
        },
        "outputs" : [ "UpdateNewRecord" ]
      }, {
        "name" : "Breakup",
        "display" : {
          "position" : {
            "x" : 1106,
            "y" : -3
          }
        },
        "config" : {
          "type" : ".BreakupConfig",
          "breakupType" : "array"
        },
        "outputs" : [ "ReadERP" ]
      }, {
        "name" : "CheckIfNew",
        "display" : {
          "position" : {
            "x" : 664,
            "y" : -1
          }
        },
        "config" : {
          "type" : ".SwitchConfig",
          "switchCases" : [ {
            "expression" : "return Boolean(event.value)",
            "outputs" : [ "Breakup" ],
            "description" : "Value Is True"
          }, {
            "expression" : "return true",
            "outputs" : [ ],
            "description" : "Default"
          } ],
          "evaluationType" : "onFirst"
        },
        "outputs" : [ ]
      }, {
        "name" : "LoadPreviousRecord",
        "display" : {
          "position" : {
            "x" : 246,
            "y" : 2
          }
        },
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "stage.setValue(event.value);"
        },
        "outputs" : [ "CheckIfNew" ]
      }, {
        "name" : "UpdateNewRecord",
        "display" : {
          "position" : {
            "x" : 1121,
            "y" : 245
          }
        },
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "stage.setValue(event.value);"
        },
        "outputs" : [ "ReturnHttpResponse" ]
      } ],
      "trackActivity" : false,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "display" : {
          "position" : {
            "x" : -450,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "InitBlock",
      "tags" : [ ],
      "inputStages" : [ "Transform" ],
      "stages" : [ {
        "name" : "Read",
        "display" : {
          "position" : {
            "x" : 690,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".ReadConfig",
          "failureOutputs" : [ ],
          "reference" : {
            "type" : "Instance",
            "name" : "testInit_Instance",
            "params" : {
              "p" : "{{event.value}}"
            },
            "pick" : ""
          }
        },
        "outputs" : [ "Transform_1" ]
      }, {
        "name" : "Transform",
        "display" : {
          "position" : {
            "x" : 240,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "event.value=123;\r\nstage.setValue(event.value);"
        },
        "outputs" : [ "Read" ]
      }, {
        "name" : "Transform_1",
        "display" : {
          "position" : {
            "x" : 1226,
            "y" : 63
          }
        },
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "stage.setValue(event.value);"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : true,
      "triggers" : [ ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "ProcessMSIRequestAndPublishResult",
      "description" : "Extract batch no. from request payload, forward to sub-pipeline to capture file data, curate result payload and POST back to MSI.",
      "tags" : [ "PAS_X_MSI" ],
      "inputStages" : [ "Messages" ],
      "stages" : [ {
        "name" : "Publish",
        "display" : {
          "position" : {
            "x" : 2040,
            "y" : -67
          }
        },
        "config" : {
          "type" : ".ModelConfig",
          "model" : "Publish",
          "objectName" : "",
          "initExpression" : "",
          "attributes" : [ {
            "name" : "MsiMessageContainer",
            "expression" : {
              "type" : "JavaScript",
              "expression" : ""
            },
            "attributes" : [ {
              "name" : "messageInstanceId",
              "expression" : {
                "type" : "JavaScript",
                "expression" : "return event.value.MsiMessageContainer_messageInstanceId;"
              }
            }, {
              "name" : "direction",
              "expression" : {
                "type" : "JavaScript",
                "expression" : "return \"SF_TO_MES\";"
              }
            }, {
              "name" : "systemId",
              "expression" : {
                "type" : "JavaScript",
                "expression" : "return event.value.MsiMessageContainer_systemId;"
              }
            }, {
              "name" : "messageType",
              "expression" : {
                "type" : "JavaScript",
                "expression" : "return event.value.MsiMessageContainer_messageType;"
              }
            }, {
              "name" : "messageContext",
              "expression" : {
                "type" : "JavaScript",
                "expression" : ""
              }
            }, {
              "name" : "message",
              "expression" : {
                "type" : "JavaScript",
                "expression" : ""
              },
              "attributes" : [ {
                "name" : "MsiOrderParameterMessage",
                "expression" : {
                  "type" : "JavaScript",
                  "expression" : ""
                },
                "attributes" : [ {
                  "name" : "messageInstanceId",
                  "expression" : {
                    "type" : "JavaScript",
                    "expression" : "return event.value.MsiMessageContainer_message_MsiOrderParameterMessage_messageInstanceId;"
                  }
                }, {
                  "name" : "direction",
                  "expression" : {
                    "type" : "JavaScript",
                    "expression" : "return \"SF_TO_MES\";"
                  }
                }, {
                  "name" : "messageId",
                  "expression" : {
                    "type" : "JavaScript",
                    "expression" : "return event.value.MsiMessageContainer_message_MsiOrderParameterMessage_messageId;"
                  }
                }, {
                  "name" : "supplierId",
                  "expression" : {
                    "type" : "JavaScript",
                    "expression" : "return event.value.MsiMessageContainer_message_MsiOrderParameterMessage_supplierId;"
                  }
                }, {
                  "name" : "deviceTypeId",
                  "expression" : {
                    "type" : "JavaScript",
                    "expression" : "return event.value.MsiMessageContainer_message_MsiOrderParameterMessage_deviceTypeId;"
                  }
                }, {
                  "name" : "supplierVersion",
                  "expression" : {
                    "type" : "JavaScript",
                    "expression" : ""
                  }
                }, {
                  "name" : "functionalId",
                  "expression" : {
                    "type" : "JavaScript",
                    "expression" : ""
                  }
                }, {
                  "name" : "orderContext",
                  "expression" : {
                    "type" : "JavaScript",
                    "expression" : ""
                  }
                }, {
                  "name" : "creationTime",
                  "expression" : {
                    "type" : "JavaScript",
                    "expression" : "const date = new Date();\r\nconst pad = (n) => (n < 10 ? '0' + n : n); // Helper function for padding\r\n\r\nconst formattedDate = `${date.getFullYear()}-${pad(date.getMonth() + 1)}-${pad(date.getDate())} ${pad(date.getHours())}:${pad(date.getMinutes())}:${pad(date.getSeconds())},${date.getMilliseconds()}`\r\n\r\nreturn formattedDate;"
                  }
                }, {
                  "name" : "BatchNo",
                  "expression" : {
                    "type" : "JavaScript",
                    "expression" : ""
                  },
                  "attributes" : [ {
                    "name" : "name",
                    "expression" : {
                      "type" : "JavaScript",
                      "expression" : "return event.value.MsiMessageContainer_message_MsiOrderParameterMessage_BatchNo_name;"
                    }
                  }, {
                    "name" : "dataType",
                    "expression" : {
                      "type" : "JavaScript",
                      "expression" : "return event.value.MsiMessageContainer_message_MsiOrderParameterMessage_BatchNo_dataType;"
                    }
                  }, {
                    "name" : "value",
                    "expression" : {
                      "type" : "JavaScript",
                      "expression" : "return event.value.MsiMessageContainer_message_MsiOrderParameterMessage_BatchNo_value;"
                    }
                  }, {
                    "name" : "isQualifier",
                    "expression" : {
                      "type" : "JavaScript",
                      "expression" : "return Boolean(event.value.MsiMessageContainer_message_MsiOrderParameterMessage_BatchNo_isQualifier);"
                    }
                  }, {
                    "name" : "acquisitionTime",
                    "expression" : {
                      "type" : "JavaScript",
                      "expression" : "return event.value.MsiMessageContainer_message_MsiOrderParameterMessage_BatchNo_acquisitionTime;"
                    }
                  } ]
                }, {
                  "name" : "DeviceNo",
                  "expression" : {
                    "type" : "JavaScript",
                    "expression" : ""
                  },
                  "attributes" : [ {
                    "name" : "name",
                    "expression" : {
                      "type" : "JavaScript",
                      "expression" : "return event.value.MsiMessageContainer_message_MsiOrderParameterMessage_DeviceNo_name;"
                    }
                  }, {
                    "name" : "dataType",
                    "expression" : {
                      "type" : "JavaScript",
                      "expression" : "return event.value.MsiMessageContainer_message_MsiOrderParameterMessage_DeviceNo_dataType;"
                    }
                  }, {
                    "name" : "value",
                    "expression" : {
                      "type" : "JavaScript",
                      "expression" : "return event.value.MsiMessageContainer_message_MsiOrderParameterMessage_DeviceNo_value;"
                    }
                  }, {
                    "name" : "isQualifier",
                    "expression" : {
                      "type" : "JavaScript",
                      "expression" : "return Boolean(event.value.MsiMessageContainer_message_MsiOrderParameterMessage_DeviceNo_isQualifier);"
                    }
                  }, {
                    "name" : "acquisitionTime",
                    "expression" : {
                      "type" : "JavaScript",
                      "expression" : "return event.value.MsiMessageContainer_message_MsiOrderParameterMessage_DeviceNo_acquisitionTime;"
                    }
                  } ]
                }, {
                  "name" : "Weight",
                  "expression" : {
                    "type" : "JavaScript",
                    "expression" : ""
                  },
                  "attributes" : [ {
                    "name" : "name",
                    "expression" : {
                      "type" : "JavaScript",
                      "expression" : "return \"Weight\";"
                    }
                  }, {
                    "name" : "dataType",
                    "expression" : {
                      "type" : "JavaScript",
                      "expression" : "return \"Double\";"
                    }
                  }, {
                    "name" : "value",
                    "expression" : {
                      "type" : "JavaScript",
                      "expression" : "return Math.random() * 10;"
                    }
                  }, {
                    "name" : "isQualifier",
                    "expression" : {
                      "type" : "JavaScript",
                      "expression" : "return true;"
                    }
                  }, {
                    "name" : "acquisitionTime",
                    "expression" : {
                      "type" : "JavaScript",
                      "expression" : "const date = new Date();\r\nconst pad = (n) => (n < 10 ? '0' + n : n); // Helper function for padding\r\n\r\nconst formattedDate = `${date.getFullYear()}-${pad(date.getMonth() + 1)}-${pad(date.getDate())} ${pad(date.getHours())}:${pad(date.getMinutes())}:${pad(date.getSeconds())},${date.getMilliseconds()}`\r\n\r\nreturn formattedDate;"
                    }
                  } ]
                } ]
              } ]
            } ]
          } ]
        },
        "outputs" : [ "XMLFormat" ]
      }, {
        "name" : "XMLFormat",
        "display" : {
          "position" : {
            "x" : 2490,
            "y" : -67
          }
        },
        "config" : {
          "type" : ".XMLFormatConfig",
          "outgoingType" : "String"
        },
        "outputs" : [ "Replaces" ]
      }, {
        "name" : "Messages",
        "display" : {
          "position" : {
            "x" : 238,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".ReadSourcesConfig",
          "failureOutputs" : [ ],
          "keyReferences" : [ {
            "location" : "child",
            "key" : "Messages",
            "reference" : "{{Connection.MsiMessages.OpenOrderParameterMessages}}"
          } ],
          "inputValueLocation" : "exclude",
          "inputValueKey" : "eventIn"
        },
        "outputs" : [ "GetMessages" ]
      }, {
        "name" : "Breakup",
        "display" : {
          "position" : {
            "x" : 1140,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".BreakupConfig",
          "breakupType" : "array"
        },
        "outputs" : [ "Filter" ]
      }, {
        "name" : "GetMessages",
        "display" : {
          "position" : {
            "x" : 690,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "stage.setValue(event.value.Messages);"
        },
        "outputs" : [ "Breakup" ]
      }, {
        "name" : "Filter",
        "display" : {
          "position" : {
            "x" : 1590,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".AttributeFilterConfig",
          "filterOption" : "exclude",
          "filterList" : [ {
            "filterType" : "exactPathFilter",
            "filterText" : "_id"
          }, {
            "filterType" : "exactPathFilter",
            "filterText" : "_name"
          }, {
            "filterType" : "exactPathFilter",
            "filterText" : "_timestamp"
          } ],
          "retainAsMetadata" : true,
          "metadataKey" : "filtered"
        },
        "outputs" : [ "Publish", "InprocessStatus" ]
      }, {
        "name" : "ClosedStatus",
        "display" : {
          "position" : {
            "x" : 3840,
            "y" : -135
          }
        },
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "const status = { \"status\": \"Closed\" };\r\nstage.setValue(status);"
        },
        "outputs" : [ "SQLite" ]
      }, {
        "name" : "SQLite",
        "display" : {
          "position" : {
            "x" : 4290,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.MsiMessages}}",
          "qualifier" : {
            "table" : "Messages",
            "writeType" : "update",
            "whereColumn" : "_id = {{event.metadata.filtered._id}}",
            "logAsJSON" : false,
            "createOption" : "off",
            "tableCacheInterval" : {
              "duration" : 1,
              "units" : "Hours"
            },
            "breakupArrays" : false
          },
          "qualifierExpression" : "",
          "writeReturn" : "completion"
        },
        "outputs" : [ ]
      }, {
        "name" : "Replaces",
        "display" : {
          "position" : {
            "x" : 2940,
            "y" : -67
          }
        },
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "let message = event.value;\r\nmessage = message.replace('<MsiMessageContainer>','<MsiMessageContainer xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">');\r\nmessage = message.replace('<MsiOrderParameterMessage>','<MsiOrderParameterMessage xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">');\r\nmessage = message.replace('<BatchNo>','<parameter>');\r\nmessage = message.replace('</BatchNo>','</parameter>');\r\nmessage = message.replace('<DeviceNo>','<parameter>');\r\nmessage = message.replace('</DeviceNo>','</parameter>');\r\nmessage = message.replace('<Weight>','<parameter>');\r\nmessage = message.replace('</Weight>','</parameter>');\r\nstage.setValue(message);"
        },
        "outputs" : [ "PostMessage" ]
      }, {
        "name" : "ErrorStatus",
        "display" : {
          "position" : {
            "x" : 3840,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "const status = { \"status\": \"Error\" };\r\nconst errorMessage = { \"errorMessage\": event.metadata.writeResults[0] }\r\nlet payload = {...status,...errorMessage};\r\nstage.setValue(payload);"
        },
        "outputs" : [ "SQLite" ]
      }, {
        "name" : "InprocessStatus",
        "display" : {
          "position" : {
            "x" : 3840,
            "y" : 135
          }
        },
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "const status = { \"status\": \"Inprocess\" };\r\nstage.setValue(status);"
        },
        "outputs" : [ "SQLite" ]
      }, {
        "name" : "PostMessage",
        "display" : {
          "position" : {
            "x" : 3390,
            "y" : -67
          }
        },
        "config" : {
          "type" : ".WriteConfig",
          "failureOutputs" : [ "ErrorStatus" ],
          "references" : [ "{{Connection.MsiRESTClient.PostMessage}}" ],
          "writeReturn" : "completion"
        },
        "outputs" : [ "ClosedStatus" ]
      } ],
      "trackActivity" : true,
      "triggers" : [ {
        "name" : "PolledTrigger",
        "display" : {
          "position" : {
            "x" : -454,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".TriggerPolled",
          "enabled" : false,
          "interval" : {
            "duration" : 5,
            "units" : "Seconds"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "ReceiveMSIRequestAndSendAcknowledge",
      "description" : "Capture Request From MSI.\nReply with acknowledgement.\nSave message into SQLite",
      "tags" : [ "PAS_X_MSI" ],
      "inputStages" : [ "XMLParser" ],
      "stages" : [ {
        "name" : "ReturnAck",
        "display" : {
          "position" : {
            "x" : 1569,
            "y" : -137
          }
        },
        "config" : {
          "type" : ".ReturnConfig"
        },
        "outputs" : [ ]
      }, {
        "name" : "Model",
        "display" : {
          "position" : {
            "x" : 683,
            "y" : -136
          }
        },
        "config" : {
          "type" : ".ModelConfig",
          "model" : "TransferResult",
          "objectName" : "",
          "initExpression" : "",
          "attributes" : [ {
            "name" : "TransferResult",
            "expression" : {
              "type" : "JavaScript",
              "expression" : ""
            },
            "attributes" : [ {
              "name" : "MsgInstanceId",
              "expression" : {
                "type" : "JavaScript",
                "expression" : "return event.value.MsiMessageContainer.messageInstanceId;"
              }
            }, {
              "name" : "SystemId",
              "expression" : {
                "type" : "JavaScript",
                "expression" : "return event.value.MsiMessageContainer.systemId;"
              }
            }, {
              "name" : "Success",
              "expression" : {
                "type" : "JavaScript",
                "expression" : "return true"
              }
            }, {
              "name" : "Error",
              "expression" : {
                "type" : "JavaScript",
                "expression" : ""
              }
            } ]
          } ]
        },
        "outputs" : [ "XMLFormat" ]
      }, {
        "name" : "ConvertArrayParametersToObject",
        "display" : {
          "position" : {
            "x" : 682,
            "y" : 73
          }
        },
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "event.value.MsiMessageContainer.message.MsiOrderParameterMessage.BatchNo = event.value.MsiMessageContainer.message.MsiOrderParameterMessage.parameter[0];\r\nevent.value.MsiMessageContainer.message.MsiOrderParameterMessage.DeviceNo = event.value.MsiMessageContainer.message.MsiOrderParameterMessage.parameter[1];\r\nstage.setValue(event.value);"
        },
        "outputs" : [ "Request" ]
      }, {
        "name" : "Flatten",
        "display" : {
          "position" : {
            "x" : 1546,
            "y" : 77
          }
        },
        "config" : {
          "type" : ".FlattenConfig",
          "delimiter" : "_"
        },
        "outputs" : [ "AddOpenStatus" ]
      }, {
        "name" : "XMLParser",
        "display" : {
          "position" : {
            "x" : 240,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".XMLParserConfig",
          "failureOutputs" : [ ],
          "incomingType" : "String",
          "encoding" : "Auto"
        },
        "outputs" : [ "ConvertArrayParametersToObject", "Model" ]
      }, {
        "name" : "XMLFormat",
        "display" : {
          "position" : {
            "x" : 1133,
            "y" : -134
          }
        },
        "config" : {
          "type" : ".XMLFormatConfig",
          "outgoingType" : "String"
        },
        "outputs" : [ "ReturnAck" ]
      }, {
        "name" : "Messages",
        "display" : {
          "position" : {
            "x" : 2379,
            "y" : 77
          }
        },
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.MsiMessages}}",
          "qualifier" : {
            "table" : "Messages",
            "writeType" : "insert",
            "whereColumn" : "",
            "logAsJSON" : false,
            "createOption" : "create_and_update",
            "tableCacheInterval" : {
              "duration" : 1,
              "units" : "Hours"
            },
            "breakupArrays" : false
          },
          "qualifierExpression" : "",
          "writeReturn" : "completion"
        },
        "outputs" : [ ]
      }, {
        "name" : "AddOpenStatus",
        "display" : {
          "position" : {
            "x" : 1946,
            "y" : 77
          }
        },
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "const status = { \"status\": \"Open\" };\r\nlet payload = {...event.value,...status};\r\nstage.setValue(payload);"
        },
        "outputs" : [ "Messages" ]
      }, {
        "name" : "Request",
        "display" : {
          "position" : {
            "x" : 1124,
            "y" : 77
          }
        },
        "config" : {
          "type" : ".ModelConfig",
          "model" : "Request",
          "objectName" : "",
          "initExpression" : "",
          "attributes" : [ {
            "name" : "MsiMessageContainer",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return event.value.MsiMessageContainer;"
            },
            "attributes" : [ {
              "name" : "messageInstanceId",
              "expression" : {
                "type" : "JavaScript",
                "expression" : ""
              }
            }, {
              "name" : "direction",
              "expression" : {
                "type" : "JavaScript",
                "expression" : ""
              }
            }, {
              "name" : "systemId",
              "expression" : {
                "type" : "JavaScript",
                "expression" : ""
              }
            }, {
              "name" : "messageType",
              "expression" : {
                "type" : "JavaScript",
                "expression" : ""
              }
            }, {
              "name" : "messageContext",
              "expression" : {
                "type" : "JavaScript",
                "expression" : ""
              }
            }, {
              "name" : "message",
              "expression" : {
                "type" : "JavaScript",
                "expression" : ""
              },
              "attributes" : [ {
                "name" : "MsiOrderParameterMessage",
                "expression" : {
                  "type" : "JavaScript",
                  "expression" : ""
                },
                "attributes" : [ {
                  "name" : "messageInstanceId",
                  "expression" : {
                    "type" : "JavaScript",
                    "expression" : ""
                  }
                }, {
                  "name" : "direction",
                  "expression" : {
                    "type" : "JavaScript",
                    "expression" : ""
                  }
                }, {
                  "name" : "messageId",
                  "expression" : {
                    "type" : "JavaScript",
                    "expression" : ""
                  }
                }, {
                  "name" : "supplierId",
                  "expression" : {
                    "type" : "JavaScript",
                    "expression" : ""
                  }
                }, {
                  "name" : "deviceTypeId",
                  "expression" : {
                    "type" : "JavaScript",
                    "expression" : ""
                  }
                }, {
                  "name" : "supplierVersion",
                  "expression" : {
                    "type" : "JavaScript",
                    "expression" : ""
                  }
                }, {
                  "name" : "functionalId",
                  "expression" : {
                    "type" : "JavaScript",
                    "expression" : ""
                  }
                }, {
                  "name" : "orderContext",
                  "expression" : {
                    "type" : "JavaScript",
                    "expression" : ""
                  }
                }, {
                  "name" : "creationTime",
                  "expression" : {
                    "type" : "JavaScript",
                    "expression" : ""
                  }
                }, {
                  "name" : "BatchNo",
                  "expression" : {
                    "type" : "JavaScript",
                    "expression" : ""
                  },
                  "attributes" : [ {
                    "name" : "name",
                    "expression" : {
                      "type" : "JavaScript",
                      "expression" : ""
                    }
                  }, {
                    "name" : "dataType",
                    "expression" : {
                      "type" : "JavaScript",
                      "expression" : ""
                    }
                  }, {
                    "name" : "value",
                    "expression" : {
                      "type" : "JavaScript",
                      "expression" : ""
                    }
                  }, {
                    "name" : "isQualifier",
                    "expression" : {
                      "type" : "JavaScript",
                      "expression" : ""
                    }
                  }, {
                    "name" : "acquisitionTime",
                    "expression" : {
                      "type" : "JavaScript",
                      "expression" : ""
                    }
                  } ]
                }, {
                  "name" : "DeviceNo",
                  "expression" : {
                    "type" : "JavaScript",
                    "expression" : ""
                  },
                  "attributes" : [ {
                    "name" : "name",
                    "expression" : {
                      "type" : "JavaScript",
                      "expression" : ""
                    }
                  }, {
                    "name" : "dataType",
                    "expression" : {
                      "type" : "JavaScript",
                      "expression" : ""
                    }
                  }, {
                    "name" : "value",
                    "expression" : {
                      "type" : "JavaScript",
                      "expression" : ""
                    }
                  }, {
                    "name" : "isQualifier",
                    "expression" : {
                      "type" : "JavaScript",
                      "expression" : ""
                    }
                  }, {
                    "name" : "acquisitionTime",
                    "expression" : {
                      "type" : "JavaScript",
                      "expression" : ""
                    }
                  } ]
                }, {
                  "name" : "Weight",
                  "expression" : {
                    "type" : "JavaScript",
                    "expression" : ""
                  },
                  "attributes" : [ {
                    "name" : "name",
                    "expression" : {
                      "type" : "JavaScript",
                      "expression" : ""
                    }
                  }, {
                    "name" : "dataType",
                    "expression" : {
                      "type" : "JavaScript",
                      "expression" : ""
                    }
                  }, {
                    "name" : "value",
                    "expression" : {
                      "type" : "JavaScript",
                      "expression" : ""
                    }
                  }, {
                    "name" : "isQualifier",
                    "expression" : {
                      "type" : "JavaScript",
                      "expression" : ""
                    }
                  }, {
                    "name" : "acquisitionTime",
                    "expression" : {
                      "type" : "JavaScript",
                      "expression" : ""
                    }
                  } ]
                } ]
              } ]
            } ]
          } ]
        },
        "outputs" : [ "Flatten" ]
      } ],
      "trackActivity" : true,
      "triggers" : [ {
        "name" : "ApiTrigger",
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "EmptyParameters"
          }
        }
      }, {
        "name" : "CallableTrigger",
        "config" : {
          "type" : ".TriggerCallable",
          "enabled" : false
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "checkEvent412",
      "tags" : [ ],
      "inputStages" : [ "Transform" ],
      "stages" : [ {
        "name" : "Transform",
        "display" : {
          "position" : {
            "x" : 300,
            "y" : 45
          }
        },
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "stage.setValue(event.value);"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : true,
      "triggers" : [ {
        "name" : "FlowTrigger",
        "display" : {
          "position" : {
            "x" : -416,
            "y" : -34
          }
        },
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Exception",
            "interval" : {
              "duration" : 1,
              "units" : "Seconds"
            },
            "mode" : "Always",
            "expression" : "{{Connection.opc.MotorXXX_PLC_Amps({\"motorNumber\":\"{{this.motorNumber}}\"})}}",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Connection.opc.MotorXXX_PLC_Amps({\"motorNumber\":\"{{this.motorNumber}}\"})}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Static",
            "params" : [ {
              "name" : "motorNumber",
              "pattern" : "001-5"
            } ]
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "checkEventTrigger",
      "tags" : [ ],
      "inputStages" : [ "Transform_1", "MergeRead" ],
      "stages" : [ {
        "name" : "Transform",
        "display" : {
          "position" : {
            "x" : 1140,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "stage.setValue(event.value);"
        },
        "outputs" : [ ]
      }, {
        "name" : "Read",
        "display" : {
          "position" : {
            "x" : 690,
            "y" : -67
          }
        },
        "config" : {
          "type" : ".ReadConfig",
          "failureOutputs" : [ ],
          "reference" : {
            "type" : "Input",
            "name" : "MotorXXX_PLC",
            "params" : {
              "motorNumber" : "001"
            },
            "pick" : "",
            "connectionName" : "opc"
          }
        },
        "outputs" : [ "Transform" ]
      }, {
        "name" : "MergeRead",
        "display" : {
          "position" : {
            "x" : 690,
            "y" : 67
          }
        },
        "config" : {
          "type" : ".ReadSourcesConfig",
          "failureOutputs" : [ ],
          "keyReferences" : [ {
            "location" : "child",
            "key" : "Source1",
            "reference" : "{{Connection.opc.MotorXXX_PLC({\"motorNumber\":\"001\"})}}"
          } ],
          "inputValueLocation" : "exclude",
          "inputValueKey" : "eventIn"
        },
        "outputs" : [ "Transform" ]
      }, {
        "name" : "Transform_1",
        "display" : {
          "position" : {
            "x" : 240,
            "y" : -67
          }
        },
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "stage.setValue(event.value);"
        },
        "outputs" : [ "Read" ]
      } ],
      "trackActivity" : true,
      "triggers" : [ {
        "name" : "FlowTrigger",
        "display" : {
          "position" : {
            "x" : -450,
            "y" : -67
          }
        },
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Exception",
            "interval" : {
              "duration" : 1,
              "units" : "Days"
            },
            "mode" : "Always",
            "expression" : "{{Connection.opc.MotorXXX_PLC({\"motorNumber\":\"{{this.motorNumber}}\"})}}",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Connection.opc.MotorXXX_PLC({\"motorNumber\":\"{{this.motorNumber}}\"})}}" ],
          "publishMode" : "All",
          "template" : {
            "name" : "testFlow",
            "type" : "Static",
            "params" : [ {
              "name" : "motorNumber",
              "pattern" : "001"
            } ]
          }
        }
      }, {
        "name" : "EventTrigger",
        "display" : {
          "position" : {
            "x" : -450,
            "y" : 67
          }
        },
        "config" : {
          "type" : ".TriggerEvent",
          "enabled" : false,
          "reference" : "{{Connection.opc.MotorXXX_PLC}}"
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "motor001",
      "tags" : [ ],
      "inputStages" : [ "Model", "Transform" ],
      "stages" : [ {
        "name" : "Transform",
        "display" : {
          "position" : {
            "x" : 297,
            "y" : -25
          }
        },
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "stage.setValue(event.value);"
        },
        "outputs" : [ ]
      }, {
        "name" : "Model",
        "display" : {
          "position" : {
            "x" : 310,
            "y" : 169
          }
        },
        "config" : {
          "type" : ".ModelConfig",
          "model" : "motorModel",
          "objectName" : "",
          "initExpression" : "",
          "attributes" : [ {
            "name" : "standardatt1",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return event.value.motorId;"
            }
          }, {
            "name" : "stanadardatt2",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return event.value.amps;"
            }
          } ]
        },
        "outputs" : [ "WriteNew" ]
      }, {
        "name" : "WriteNew",
        "display" : {
          "position" : {
            "x" : 738,
            "y" : 165
          }
        },
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.mqtt}}",
          "qualifier" : {
            "topic" : "newTopic/Motor001Standardized",
            "qos" : 0,
            "namedRoot" : false,
            "retained" : false,
            "breakupArrays" : false
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : true,
      "triggers" : [ {
        "name" : "EventTrigger",
        "display" : {
          "position" : {
            "x" : -457,
            "y" : 134
          }
        },
        "config" : {
          "type" : ".TriggerEvent",
          "enabled" : false,
          "reference" : "{{Connection.mqtt.Site1_Area1_Line1_assets_motors_Motor001}}"
        }
      }, {
        "name" : "FlowTrigger",
        "display" : {
          "position" : {
            "x" : -387,
            "y" : -149
          }
        },
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Exception",
            "interval" : {
              "duration" : 1,
              "units" : "Seconds"
            },
            "mode" : "Always",
            "expression" : "{{Connection.mqtt.Site1_Area1_Line1_assets_motors_Motor001}}",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Connection.mqtt.Site1_Area1_Line1_assets_motors_Motor001}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "motor001_to_mqtt",
      "tags" : [ "starter_solution" ],
      "inputStages" : [ "To_MQTT" ],
      "stages" : [ {
        "name" : "To_MQTT",
        "display" : {
          "position" : {
            "x" : 240,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.mqtt}}",
          "qualifier" : {
            "topic" : "test/{{event.value.site}}/{{event.value.area}}/{{event.value.line}}/assets/motors/{{event.value.motorId}} ",
            "qos" : 0,
            "namedRoot" : false,
            "retained" : false,
            "breakupArrays" : false,
            "filterList" : [ "_name", "_model" ]
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : true,
      "triggers" : [ {
        "name" : "FlowTrigger",
        "display" : {
          "position" : {
            "x" : -450,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Polled",
            "interval" : {
              "duration" : 1,
              "units" : "Seconds"
            },
            "mode" : "Always",
            "expression" : "",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Instance.motor001}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "motor001_to_mqtt_bak",
      "tags" : [ "starter_solution" ],
      "inputStages" : [ "MergeRead" ],
      "stages" : [ {
        "name" : "To_MQTT",
        "display" : {
          "position" : {
            "x" : 3045,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.mqtt}}",
          "qualifier" : {
            "topic" : "{{event.value.site}}/{{event.value.area}}/{{event.value.line}}/assets/motors/{{event.value.motorId}} ",
            "qos" : 0,
            "namedRoot" : false,
            "retained" : false,
            "breakupArrays" : false,
            "filterList" : [ "_name", "_model" ]
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "Read",
        "display" : {
          "position" : {
            "x" : 345,
            "y" : 202
          }
        },
        "config" : {
          "type" : ".ReadConfig",
          "failureOutputs" : [ ],
          "reference" : {
            "type" : "Input",
            "name" : "Motor001_PLC_param",
            "params" : {
              "number" : "{{event.value}}"
            },
            "pick" : "",
            "connectionName" : "opc"
          }
        },
        "outputs" : [ "Read_1" ]
      }, {
        "name" : "Read_1",
        "display" : {
          "position" : {
            "x" : 795,
            "y" : 202
          }
        },
        "config" : {
          "type" : ".ReadConfig",
          "failureOutputs" : [ ],
          "reference" : {
            "type" : "Instance",
            "name" : "motor001",
            "params" : { },
            "pick" : ""
          }
        },
        "outputs" : [ ]
      }, {
        "name" : "Transform",
        "display" : {
          "position" : {
            "x" : -555,
            "y" : 202
          }
        },
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "let assetRange = [\"001\",\"002\",\"003\"]\r\nstage.setValue(assetRange);"
        },
        "outputs" : [ "Breakup" ]
      }, {
        "name" : "Breakup",
        "display" : {
          "position" : {
            "x" : -105,
            "y" : 202
          }
        },
        "config" : {
          "type" : ".BreakupConfig",
          "breakupType" : "array"
        },
        "outputs" : [ "Read" ]
      }, {
        "name" : "Read_2",
        "display" : {
          "position" : {
            "x" : 2145,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".ReadConfig",
          "failureOutputs" : [ ],
          "reference" : {
            "type" : "Input",
            "name" : "get_motor001_service_info_copy",
            "params" : {
              "motorId" : "{{event.value.ID}}"
            },
            "pick" : "",
            "connectionName" : "sql"
          }
        },
        "outputs" : [ "Model" ]
      }, {
        "name" : "MergeRead",
        "display" : {
          "position" : {
            "x" : 345,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".ReadSourcesConfig",
          "failureOutputs" : [ ],
          "keyReferences" : [ {
            "location" : "child",
            "key" : "Source1",
            "reference" : "{{Connection.opc.Motor001_PLC}}"
          } ],
          "inputValueLocation" : "exclude",
          "inputValueKey" : "eventIn"
        },
        "outputs" : [ "Breakup_2" ]
      }, {
        "name" : "Breakup_1",
        "display" : {
          "position" : {
            "x" : 1245,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".BreakupConfig",
          "breakupType" : "array"
        },
        "outputs" : [ "Filter" ]
      }, {
        "name" : "Breakup_2",
        "display" : {
          "position" : {
            "x" : 795,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".BreakupConfig",
          "breakupType" : "object"
        },
        "outputs" : [ "Breakup_1" ]
      }, {
        "name" : "Model",
        "display" : {
          "position" : {
            "x" : 2595,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".ModelConfig",
          "model" : "motors",
          "objectName" : "",
          "initExpression" : "",
          "attributes" : [ {
            "name" : "motorId",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return event.value[0].machineid;"
            }
          }, {
            "name" : "site",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return System.Variables.Site;"
            }
          }, {
            "name" : "area",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return System.Variables.Area;"
            }
          }, {
            "name" : "line",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return System.Variables.Line;"
            }
          }, {
            "name" : "amps",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return event.metadata.motorXxxFilter1.Amps;"
            }
          }, {
            "name" : "speed",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return event.metadata.motorXxxFilter1.Speed;"
            }
          }, {
            "name" : "vibration",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return event.metadata.motorXxxFilter1.Vibration;"
            }
          }, {
            "name" : "error",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return event.metadata.motorXxxFilter1.Error;"
            }
          }, {
            "name" : "lastServiceDate",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return event.value[0].lastservicedate;"
            }
          }, {
            "name" : "lastServiceNotes",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return event.value[0].Notes;"
            }
          } ]
        },
        "outputs" : [ "To_MQTT" ]
      }, {
        "name" : "Filter",
        "display" : {
          "position" : {
            "x" : 1695,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".AttributeFilterConfig",
          "filterOption" : "include",
          "filterList" : [ {
            "filterType" : "exactPathFilter",
            "filterText" : "ID"
          } ],
          "retainAsMetadata" : true,
          "metadataKey" : "motorXxxFilter1"
        },
        "outputs" : [ "Read_2" ]
      } ],
      "trackActivity" : true,
      "triggers" : [ {
        "name" : "FlowTrigger",
        "display" : {
          "position" : {
            "x" : -550,
            "y" : -255
          }
        },
        "config" : {
          "type" : ".TriggerFlow",
          "enabled" : false,
          "flowEvaluation" : {
            "type" : "Polled",
            "interval" : {
              "duration" : 1,
              "units" : "Seconds"
            },
            "mode" : "Always",
            "expression" : "",
            "delay" : {
              "duration" : 0,
              "units" : "Seconds"
            }
          },
          "inReferences" : [ "{{Instance.motor001}}" ],
          "publishMode" : "All",
          "template" : {
            "type" : "Off"
          }
        }
      }, {
        "name" : "PolledTrigger",
        "display" : {
          "position" : {
            "x" : -555,
            "y" : 67
          }
        },
        "config" : {
          "type" : ".TriggerPolled",
          "enabled" : false,
          "interval" : {
            "duration" : 1,
            "units" : "Seconds"
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "motor001_to_mqtt_observable",
      "tags" : [ "starter_solution" ],
      "inputStages" : [ "MergeRead" ],
      "stages" : [ {
        "name" : "To_MQTT",
        "display" : {
          "position" : {
            "x" : 3495,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.mqtt}}",
          "qualifier" : {
            "topic" : "new/{{event.value.site}}/{{event.value.area}}/{{event.value.line}}/assets/motors/{{event.value.motorId}} ",
            "qos" : 0,
            "namedRoot" : false,
            "retained" : false,
            "breakupArrays" : false,
            "filterList" : [ "_name", "_model" ]
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "Read_2",
        "display" : {
          "position" : {
            "x" : 2595,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".ReadConfig",
          "failureOutputs" : [ ],
          "reference" : {
            "type" : "Input",
            "name" : "get_motor001_service_info_copy",
            "params" : {
              "motorId" : "{{event.value.ID}}"
            },
            "pick" : "",
            "connectionName" : "sql"
          }
        },
        "outputs" : [ "Model" ]
      }, {
        "name" : "MergeRead",
        "display" : {
          "position" : {
            "x" : 345,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".ReadSourcesConfig",
          "failureOutputs" : [ ],
          "keyReferences" : [ {
            "location" : "child",
            "key" : "Source1",
            "reference" : "{{Connection.opc.Motor001_PLC}}"
          } ],
          "inputValueLocation" : "exclude",
          "inputValueKey" : "eventIn"
        },
        "outputs" : [ "Breakup_2" ]
      }, {
        "name" : "Breakup_1",
        "display" : {
          "position" : {
            "x" : 1245,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".BreakupConfig",
          "breakupType" : "array"
        },
        "outputs" : [ "Filter" ]
      }, {
        "name" : "Breakup_2",
        "display" : {
          "position" : {
            "x" : 795,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".BreakupConfig",
          "breakupType" : "object"
        },
        "outputs" : [ "Breakup_1" ]
      }, {
        "name" : "Model",
        "display" : {
          "position" : {
            "x" : 3045,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".ModelConfig",
          "model" : "motors",
          "objectName" : "",
          "initExpression" : "",
          "attributes" : [ {
            "name" : "motorId",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return event.value[0].machineid;"
            }
          }, {
            "name" : "site",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return System.Variables.Site;"
            }
          }, {
            "name" : "area",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return System.Variables.Area;"
            }
          }, {
            "name" : "line",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return System.Variables.Line;"
            }
          }, {
            "name" : "amps",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return event.metadata.motorXxxFilter1.Amps;"
            }
          }, {
            "name" : "speed",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return event.metadata.motorXxxFilter1.Speed;"
            }
          }, {
            "name" : "vibration",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return event.metadata.motorXxxFilter1.Vibration;"
            }
          }, {
            "name" : "error",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return event.metadata.motorXxxFilter1.Error;"
            }
          }, {
            "name" : "lastServiceDate",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return event.value[0].lastservicedate;"
            }
          }, {
            "name" : "lastServiceNotes",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return event.value[0].Notes;"
            }
          } ]
        },
        "outputs" : [ "To_MQTT" ]
      }, {
        "name" : "Filter",
        "display" : {
          "position" : {
            "x" : 1695,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".AttributeFilterConfig",
          "filterOption" : "include",
          "filterList" : [ {
            "filterType" : "exactPathFilter",
            "filterText" : "ID"
          } ],
          "retainAsMetadata" : true,
          "metadataKey" : "motorXxxFilter1"
        },
        "outputs" : [ "Switch" ]
      }, {
        "name" : "Switch",
        "display" : {
          "position" : {
            "x" : 2145,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".SwitchConfig",
          "switchCases" : [ {
            "expression" : "return Boolean(event.value.ID!==\"MOTOR005\")",
            "outputs" : [ "Read_2" ],
            "description" : "Value Is True"
          }, {
            "expression" : "return true",
            "outputs" : [ "Transform" ],
            "description" : "Default"
          } ],
          "evaluationType" : "onFirst"
        },
        "outputs" : [ ]
      }, {
        "name" : "Transform",
        "display" : {
          "position" : {
            "x" : 2577,
            "y" : 193
          }
        },
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "stage.setValue(event.value);"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : true,
      "triggers" : [ {
        "name" : "PolledTrigger",
        "display" : {
          "position" : {
            "x" : -555,
            "y" : 18
          }
        },
        "config" : {
          "type" : ".TriggerPolled",
          "enabled" : false,
          "interval" : {
            "duration" : 1,
            "units" : "Seconds"
          }
        }
      }, {
        "name" : "ApiTrigger",
        "display" : {
          "position" : {
            "x" : -519,
            "y" : -182
          }
        },
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "inline",
            "model" : {
              "name" : "params",
              "tags" : [ ],
              "attributes" : [ {
                "attributeType" : "Internal",
                "name" : "att1",
                "nullable" : false,
                "required" : false,
                "array" : false,
                "internalType" : "Any"
              }, {
                "attributeType" : "Internal",
                "name" : "att2",
                "nullable" : false,
                "required" : false,
                "array" : false,
                "internalType" : "Any"
              } ]
            }
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "motor001_to_mqtt_observable_copy",
      "tags" : [ "starter_solution" ],
      "inputStages" : [ "Read" ],
      "stages" : [ {
        "name" : "To_MQTT",
        "display" : {
          "position" : {
            "x" : 2490,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.mqtt}}",
          "qualifier" : {
            "topic" : "new/{{event.value.site}}/{{event.value.area}}/{{event.value.line}}/assets/motors/{{event.value.motorId}} ",
            "qos" : 0,
            "namedRoot" : false,
            "retained" : false,
            "breakupArrays" : false,
            "filterList" : [ "_name", "_model" ]
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "Read_2",
        "display" : {
          "position" : {
            "x" : 1590,
            "y" : 67
          }
        },
        "config" : {
          "type" : ".ReadConfig",
          "failureOutputs" : [ "Transform" ],
          "reference" : {
            "type" : "Input",
            "name" : "get_motor001_service_info_copy",
            "params" : {
              "motorId" : "{{event.value.ID}}"
            },
            "pick" : "",
            "connectionName" : "sql"
          }
        },
        "outputs" : [ "Model" ]
      }, {
        "name" : "Breakup_1",
        "display" : {
          "position" : {
            "x" : 690,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".BreakupConfig",
          "breakupType" : "array"
        },
        "outputs" : [ "Filter" ]
      }, {
        "name" : "Model",
        "display" : {
          "position" : {
            "x" : 2040,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".ModelConfig",
          "model" : "motors",
          "objectName" : "",
          "initExpression" : "",
          "attributes" : [ {
            "name" : "motorId",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return event.value[0].machineid;"
            }
          }, {
            "name" : "site",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return System.Variables.Site;"
            }
          }, {
            "name" : "area",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return System.Variables.Area;"
            }
          }, {
            "name" : "line",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return System.Variables.Line;"
            }
          }, {
            "name" : "amps",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return event.metadata.motorXxxFilter1.Amps;"
            }
          }, {
            "name" : "speed",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return event.metadata.motorXxxFilter1.Speed;"
            }
          }, {
            "name" : "vibration",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return event.metadata.motorXxxFilter1.Vibration;"
            }
          }, {
            "name" : "error",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return event.metadata.motorXxxFilter1.Error;"
            }
          }, {
            "name" : "lastServiceDate",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return event.value[0].lastservicedate;"
            }
          }, {
            "name" : "lastServiceNotes",
            "expression" : {
              "type" : "JavaScript",
              "expression" : "return event.value[0].Notes;"
            }
          } ]
        },
        "outputs" : [ "To_MQTT" ]
      }, {
        "name" : "Filter",
        "display" : {
          "position" : {
            "x" : 1140,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".AttributeFilterConfig",
          "filterOption" : "include",
          "filterList" : [ {
            "filterType" : "exactPathFilter",
            "filterText" : "ID"
          } ],
          "retainAsMetadata" : true,
          "metadataKey" : "motorXxxFilter1"
        },
        "outputs" : [ "Read_2" ]
      }, {
        "name" : "Switch",
        "display" : {
          "position" : {
            "x" : 1140,
            "y" : 135
          }
        },
        "config" : {
          "type" : ".SwitchConfig",
          "switchCases" : [ {
            "expression" : "return Boolean(event.value.ID!==\"MOTOR005\")",
            "outputs" : [ "Read_2" ],
            "description" : "Value Is True"
          }, {
            "expression" : "return true",
            "outputs" : [ ],
            "description" : "Default"
          } ],
          "evaluationType" : "onFirst"
        },
        "outputs" : [ ]
      }, {
        "name" : "Transform",
        "display" : {
          "position" : {
            "x" : 2040,
            "y" : 135
          }
        },
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "stage.setValue(event.value);"
        },
        "outputs" : [ ]
      }, {
        "name" : "Read",
        "display" : {
          "position" : {
            "x" : 240,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".ReadConfig",
          "failureOutputs" : [ ],
          "reference" : {
            "type" : "Input",
            "name" : "Motor001_PLC",
            "params" : {
              "motorNumber" : ""
            },
            "pick" : "",
            "connectionName" : "opc"
          }
        },
        "outputs" : [ "Breakup_1" ]
      } ],
      "trackActivity" : true,
      "triggers" : [ {
        "name" : "PolledTrigger",
        "display" : {
          "position" : {
            "x" : -450,
            "y" : -67
          }
        },
        "config" : {
          "type" : ".TriggerPolled",
          "enabled" : false,
          "interval" : {
            "duration" : 1,
            "units" : "Seconds"
          }
        }
      }, {
        "name" : "ApiTrigger",
        "display" : {
          "position" : {
            "x" : -450,
            "y" : 67
          }
        },
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "inline",
            "model" : {
              "name" : "params",
              "tags" : [ ],
              "attributes" : [ {
                "attributeType" : "Internal",
                "name" : "att1",
                "nullable" : false,
                "required" : false,
                "array" : false,
                "internalType" : "Any"
              }, {
                "attributeType" : "Internal",
                "name" : "att2",
                "nullable" : false,
                "required" : false,
                "array" : false,
                "internalType" : "Any"
              } ]
            }
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "pi2csv",
      "tags" : [ ],
      "inputStages" : [ "Read" ],
      "stages" : [ {
        "name" : "Read",
        "display" : {
          "position" : {
            "x" : 263,
            "y" : -3
          }
        },
        "config" : {
          "type" : ".ReadConfig",
          "failureOutputs" : [ ],
          "reference" : {
            "type" : "Input",
            "name" : "test",
            "params" : { },
            "pick" : "",
            "connectionName" : "piremote"
          }
        },
        "outputs" : [ "WriteNew" ]
      }, {
        "name" : "WriteNew",
        "display" : {
          "position" : {
            "x" : 696,
            "y" : -8
          }
        },
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.csv}}",
          "qualifier" : {
            "fileName" : "test.csv",
            "delimiter" : "",
            "create" : true,
            "breakupArrays" : false
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : false,
      "triggers" : [ ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "smartquery",
      "description" : "testDesc",
      "tags" : [ "aiAgent" ],
      "inputStages" : [ "Switch" ],
      "stages" : [ {
        "name" : "SmartQuery",
        "display" : {
          "position" : {
            "x" : 1140,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".SmartQueryConfig",
          "query" : {
            "from" : [ "Site02.**" ],
            "where" : "",
            "select" : {
              "what" : [ "value", "path" ],
              "as" : "List",
              "delim" : "/"
            }
          },
          "breakup" : true
        },
        "outputs" : [ "Return", "WriteNew" ]
      }, {
        "name" : "WriteNew",
        "display" : {
          "position" : {
            "x" : 1590,
            "y" : 67
          }
        },
        "config" : {
          "type" : ".DynamicWriteConfig",
          "failureOutputs" : [ ],
          "connectionReference" : "{{Connection.mqtt}}",
          "qualifier" : {
            "topic" : "{{event.value._path}}",
            "qos" : 0,
            "namedRoot" : false,
            "retained" : false,
            "breakupArrays" : false
          },
          "qualifierExpression" : "",
          "writeReturn" : "ignore"
        },
        "outputs" : [ ]
      }, {
        "name" : "Return",
        "display" : {
          "position" : {
            "x" : 1590,
            "y" : -67
          }
        },
        "config" : {
          "type" : ".ReturnConfig"
        },
        "outputs" : [ ]
      }, {
        "name" : "Switch",
        "display" : {
          "position" : {
            "x" : 195,
            "y" : -242
          }
        },
        "config" : {
          "type" : ".SwitchConfig",
          "switchCases" : [ {
            "expression" : "return Boolean(event.value.test)",
            "outputs" : [ "SmartQuery" ],
            "description" : "Value Is True"
          }, {
            "expression" : "return true",
            "outputs" : [ "Transform" ],
            "description" : "Default"
          } ],
          "evaluationType" : "onFirst"
        },
        "outputs" : [ ]
      }, {
        "name" : "Transform",
        "display" : {
          "position" : {
            "x" : 638,
            "y" : -200
          }
        },
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "event.value.test = \"foo\";\r\nstage.setValue(event.value);"
        },
        "outputs" : [ "SmartQuery" ]
      } ],
      "trackActivity" : true,
      "triggers" : [ {
        "name" : "PolledTrigger",
        "display" : {
          "position" : {
            "x" : -450,
            "y" : -67
          }
        },
        "config" : {
          "type" : ".TriggerPolled",
          "enabled" : false,
          "interval" : {
            "duration" : 2,
            "units" : "Seconds"
          }
        }
      }, {
        "name" : "ApiTrigger",
        "display" : {
          "position" : {
            "x" : -450,
            "y" : 67
          }
        },
        "config" : {
          "type" : ".TriggerApi",
          "enabled" : false,
          "parameters" : {
            "type" : "inline",
            "model" : {
              "name" : "params",
              "tags" : [ ],
              "attributes" : [ {
                "attributeType" : "Internal",
                "name" : "test",
                "nullable" : false,
                "required" : false,
                "array" : false,
                "internalType" : "Any"
              } ]
            }
          }
        }
      } ],
      "errorHandler" : {
        "type" : "default"
      }
    }, {
      "name" : "transformation",
      "tags" : [ ],
      "inputStages" : [ "Transform" ],
      "stages" : [ {
        "name" : "Transform",
        "display" : {
          "position" : {
            "x" : 166,
            "y" : 10
          }
        },
        "config" : {
          "type" : ".TransformConfig",
          "transformExpression" : "event.value = {\r\n            \"02G-0013A VAC TWR ACCUM SOUR WATER\": {\r\n                  \"Motor\": {\r\n                        \"Shaft\": {\r\n                              \"MOTOR IB\": {\r\n                                    \"MIB X\": {\r\n                                          \"Accl Wf (5000 Hz)\": {\r\n                                                \"Data\": [\r\n                                                      0,\r\n                                                      0,\r\n                                                      0,\r\n                                                      0\r\n                                                ],\r\n                                                \"NumberofSamples\": 0,\r\n                                                \"SamplingPeriod\": 0\r\n                                          },\r\n                                          \"Vel Spec (1000Hz / 1600 lines)\": {\r\n                                                \"Data\": [\r\n                                                      0,\r\n                                                      0,\r\n                                                      0,\r\n                                                      0\r\n                                                ],\r\n                                                \"NumberofSamples\": 0,\r\n                                                \"SamplingPeriod\": 0\r\n                                          }\r\n                                    }\r\n                              }\r\n                        }\r\n                  },\r\n                  \"Pump\": {\r\n                        \"Shaft\": {\r\n                              \"Pump IB\": {\r\n                                    \"MIB X\": {\r\n                                          \"Accl Wf (5000 Hz)\": {\r\n                                                \"Data\": [\r\n                                                      0,\r\n                                                      0,\r\n                                                      0,\r\n                                                      0\r\n                                                ],\r\n                                                \"NumberofSamples\": 0,\r\n                                                \"SamplingPeriod\": 0\r\n                                          },\r\n                                          \"Vel Spec (1000Hz / 1600 lines)\": {\r\n                                                \"Data\": [\r\n                                                      0,\r\n                                                      0,\r\n                                                      0,\r\n                                                      0\r\n                                                ],\r\n                                                \"NumberofSamples\": 0,\r\n                                                \"SamplingPeriod\": 0\r\n                                          }\r\n                                    }\r\n                              }\r\n                        }\r\n                  }\r\n            }\r\n}\r\nstage.setValue(event.value);"
        },
        "outputs" : [ "Flatten" ]
      }, {
        "name" : "Flatten",
        "display" : {
          "position" : {
            "x" : 580,
            "y" : 0
          }
        },
        "config" : {
          "type" : ".FlattenConfig",
          "delimiter" : "."
        },
        "outputs" : [ ]
      } ],
      "trackActivity" : true,
      "triggers" : [ ],
      "errorHandler" : {
        "type" : "default"
      }
    } ],
    "tags" : [ {
      "name" : "PAS_X_MSI"
    }, {
      "name" : "aiAgent"
    }, {
      "name" : "starter_solution"
    } ],
    "functions" : [ ],
    "namespace" : [ {
      "id" : "27f01a79-c1b0-4453-a1d7-635e760240d6",
      "name" : "Site02"
    }, {
      "id" : "dd057eb8-c145-416b-af37-ec0d18ca0cea",
      "name" : "Area01",
      "parentNamespaceId" : "27f01a79-c1b0-4453-a1d7-635e760240d6"
    }, {
      "id" : "4a02da41-395e-462e-acb0-ce1bfc947d76",
      "name" : "Motor001",
      "parentNamespaceId" : "dd057eb8-c145-416b-af37-ec0d18ca0cea",
      "reference" : {
        "type" : "Instance",
        "name" : "motor001"
      }
    }, {
      "id" : "2473c686-05da-41d5-b72c-a55d17902775",
      "name" : "Line01",
      "parentNamespaceId" : "dd057eb8-c145-416b-af37-ec0d18ca0cea"
    } ]
  },
  "network" : {
    "version" : 0,
    "groups" : [ {
      "name" : "demo",
      "token" : "UjcPcphTOzSVX1js9J4ct79qzcysxjZJ"
    } ],
    "hubs" : [ {
      "name" : "EdgeNode1",
      "description" : "",
      "clientId" : "774ecf42-ca8d-47ae-93ca-e82409c21db9",
      "networkGroup" : "demo"
    }, {
      "name" : "EdgeNode2",
      "description" : "",
      "clientId" : "a3c64049-0e86-4916-bb1e-8052bb7a4eef",
      "networkGroup" : "demo"
    }, {
      "name" : "EdgeNode3",
      "description" : "",
      "clientId" : "4328748d-4c5a-4b89-be41-ef00441d792f",
      "networkGroup" : "demo"
    }, {
      "name" : "EdgeNode4",
      "description" : "",
      "clientId" : "69a4ac7e-9ace-45da-b73c-b6019b7bef4f",
      "networkGroup" : "demo"
    } ]
  },
  "accessControl" : {
    "apiKeys" : [ {
      "friendlyName" : "new",
      "expiration" : 1780185599000,
      "version" : 1,
      "algorithm" : "SHA-256",
      "user" : "mcpUser",
      "hash" : "l9nKMMNSZDTpr7VsZfaeNnaZdjmaZNmVXHjDlCvfDvc="
    }, {
      "friendlyName" : "new2",
      "expiration" : 1780185599000,
      "version" : 1,
      "algorithm" : "SHA-256",
      "user" : "mcpUser",
      "hash" : "RFDaitOMFkjhOpSIeP+I0moE7of1+NDQgd95CFfqN1U="
    } ],
    "version" : 0,
    "roles" : [ {
      "name" : "admin",
      "policyVersion" : 1,
      "claims" : [ {
        "resources" : [ "*" ],
        "actions" : [ "*" ]
      } ]
    }, {
      "name" : "default",
      "policyVersion" : 1,
      "claims" : [ {
        "resources" : [ "*" ],
        "actions" : [ "read" ]
      }, {
        "resources" : [ "connection", "instance", "pipeline" ],
        "actions" : [ "*" ]
      } ]
    } ],
    "users" : [ {
      "name" : "administrator",
      "credentials" : {
        "salt" : "vOFWnojzO7a6eRJRFvqW6w==",
        "hashedPassword" : "/OI7nRMieNkIUyT8PfwLl0Cghdp9lak5/wjLOf4bQCG9g2coIPkneLSo6zsi8cyjXygwtS3I5BZvIGEGji3VTg=="
      },
      "policyVersion" : 1,
      "roles" : [ "admin" ],
      "claims" : [ ]
    }, {
      "name" : "mcpUser",
      "credentials" : {
        "salt" : "Nb6ZUJktAdFLKt4LatDyfA==",
        "hashedPassword" : "1KlcS9nLM9oMdNObfK9VvOs/TSAQG7PDWBiD0ztFch7DIalQtbqcLBxVXcyYnKJvuEl9SNJQHhFcNHLbeMUceg=="
      },
      "policyVersion" : 1,
      "roles" : [ "admin" ],
      "claims" : [ ]
    }, {
      "name" : "restUser",
      "credentials" : {
        "salt" : "AQQvVLd4pMiwdgoT1dlFwA==",
        "hashedPassword" : "+kcsUsgt75tyn4aZRJYwNDvR1a1GxRPTKcwL8AyAGB527lN1XX+6Yam/1Z+KtfwNKHOl71JvJchb00GpNosxKw=="
      },
      "policyVersion" : 1,
      "roles" : [ "admin" ],
      "claims" : [ ]
    } ]
  },
  "system" : {
    "version" : 0,
    "variables" : [ {
      "name" : "Enterprise",
      "value" : "Enterprise1"
    }, {
      "name" : "Site",
      "value" : "Site1"
    }, {
      "name" : "Area",
      "value" : "Area1"
    }, {
      "name" : "Line",
      "value" : "Line1"
    } ],
    "secrets" : [ ],
    "certificates" : [ {
      "alias" : "app-certificate-private-key",
      "chain" : "MIIESzCCAzOgAwIBAgIIZPk8E50XM80wDQYJKoZIhvcNAQELBQAwUTEwMC4GA1UEAwwnSGlnaEJ5dGUvSW50ZWxsaWdlbmNlSHViQFRISVJBTy1KTVNHUlYzMRAwDgYDVQQKDAdVbmtub3duMQswCQYDVQQGEwJVUzAeFw0yNTA1MjgwNjA5MTBaFw0zMDA1MjcwNjA5MTBaMFExMDAuBgNVBAMMJ0hpZ2hCeXRlL0ludGVsbGlnZW5jZUh1YkBUSElSQU8tSk1TR1JWMzEQMA4GA1UECgwHVW5rbm93bjELMAkGA1UEBhMCVVMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCoV/gtKS3e1WikrklOwUIlkR+zVBfRw4an8j+/MtgPNMVrcYR+TaGoqB2l5G7PXS0AGPJknBjcKDnS5NyULA8Fdtus+VjDxtRSb/n82nRiewMYpOBbSFNotAMmFQAeC0LP0ezNoTyEwe4H6XpdWgaoUWXrt7bObrOVKFM+VW5kA/0Rm8imTQmq3Opl+0KoQldJe4lwmLEpLXGGSrQCzBS0fH4qPLpFDqaK/pTfWpBIRJdhnFMvxcddStCXYD02zs+/MzPv1sD9gG55duhfWSnVFhXbNbNN0UUwOSkFoaeCH2w1fGqoJGEB7WDPUyOE9OKyyCMaDqNX8zl2gXathwE7AgMBAAGjggElMIIBITBGBgNVHREEPzA9hit1cm46VEhJUkFPLUpNU0dSVjM6SGlnaEJ5dGU6SW50ZWxsaWdlbmNlSHVigg5USElSQU8tSk1TR1JWMzALBgNVHQ8EBAMCAvQwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAkGA1UdEwQCMAAwHQYDVR0OBBYEFBunxuS8ztjb2tQ6CQBva5Yp6iIDMIGABgNVHSMEeTB3gBQbp8bkvM7Y29rUOgkAb2uWKeoiA6FVpFMwUTEwMC4GA1UEAwwnSGlnaEJ5dGUvSW50ZWxsaWdlbmNlSHViQFRISVJBTy1KTVNHUlYzMRAwDgYDVQQKDAdVbmtub3duMQswCQYDVQQGEwJVU4IIZPk8E50XM80wDQYJKoZIhvcNAQELBQADggEBAHGuUUhHjmwAdcSB3SBIHrs9p9kA9ql1EbNMD2nv0day7ua0cZz/fGnjeIJh7JnHMCMnDH+uMnSwP138BhrfSbBt98hwfcXnBGvZF+t4r4EPI/H8YaHJ0bCBuT8GHqcVzyAffNA9s6SqJKlJQgCZAX3DLD5CYmZIwSlayfAmCBI8HMjZ67YAE734zf9oZ0kmTbHjWI6q3cvx1Bz1cIv7lvr6vqFK0n7DsWG7f16o+Pt3XEIvL5DZga4Hq2cb7PX725rDyqgsHpaoZp8Sy72br0XIP3MAGbaEndixm+fLVYAfzIkmqDSbiHqlmB9ojfpkv1y7Q11yQA9mbRoMkqqu23I=",
      "encryptKey" : {
        "type" : "Encrypted",
        "value" : {
          "keyId" : "vrBpcHOKKwwsQER6zmCP9g==",
          "iv" : "OYlq75uAb5rcx2rr897gVQ==",
          "ciphertext" : "3FlsYDomNthiqk+iLLI4003tQJ4hBujm+KtiW+nV2sIBetCk7Neo2I2KJ9r4aggZXeWAUgC97lgiOa7DtLo6MjgNutol+3LhpGh4dDuNCKdlPvegNQRLLIzf+ivVVIPiQ4Jj5/GzD+oHwmdPoDhSK3fRDS5zWvFl+DOn8uMJXmk0bnibkdlM+oUiC3E+hzP0BP7AZ6/5r3v/u8TrKnAwklyWiEsRpFH9Hv6Xu4pF5vBOBRTqG7QlAyM2g7WvycREPryjpKR4mRqeagqBoMg3PpZO7MLMgzcgbQ3PcaX7zJqXYHkXZnLh6G9Ky3EkRW4CdM0N6U6XC7Tih5xD3AVQf9Kc93xh/0mxiNGmKzYkgfkTZ7YEUmLyoKv+QnrPo2sSRluAUtHvi4Lc88xz+sMEoZwUy1UbCMr7tb5ve7sm3xcKjxCBvLN93FSgaxIrcl6WbyfNI03efRrUpkEYmy0muhCWeWiw6e4ffr7wYqG2mzrrwJXdHHeV9INKQlP39JDkR60X2KkmC20X+fBCfMhF+/RwYW4/IA5ZSqsXVPtXamwCEoNBSmgVlBqNAhly3lSNDUFegZoY3ytw/pt0+TcStfhP6Db3drBb+XfKY5n+cwEY/FEoMYDtQDN4tL/hXBdPzAiE5Fqpj7zN+ToZ2Ol0KSoX8gPKNTmESyWJ2no8NHqSARyUXHA4lhSwWNfh0Kr4NPPZjn0rjIys7F0SHzHwp+Egs2ffiOVwFSkGBhFwNJ7UbWKKilZs//uHIz7yzWvIHrMnepXVgBmwUTccr5VpqyZ6UOyu2oc6+wYX0++bRvfHsaNyUw5MIh307bWQWLJk9F7U+/ESrIC1Necq46ledAKeksAb3zn615YvF6UEpHPgAN/eBBYgCU8WemCmre5fVdJGI/tl14d9Nb1rckShHZRxk91Lqz/I4bEWnXX7ZegTNAIOIX1IlDdyIYAoVgHGIlm/Oinpxj3k7jq4rypgK4QvCbPkByvKZ7A5e81m4kIUS/xRw7bfwWLltnCdGmd1nN9L3AFHJ5PRe0cw/0YsPEcGZ5/2ZAbOgAG/dtJ8lzKFytxQxI0k6hAcYduvitpnmcDhF1ZiQ5tR6T1v+l4XDeZJtGiiIAbSqKpWZwgwT9qIBTrbh6wjjfqHe1x2eFsGZ8nL5IlySUwvAwB20SCvaYUx3bkYxI0cp+J7FHbs/ktmuCBxOpK97Mss1lZ+V6viIyqd3YnhL8CkVJnnoyYEAqpqZkI+L+QpFuBK+OuCS+hi0+KANB+JDhTEl5lkKGHk4D35qkM3fPRLSqpp0Lb/y+6elHEbSR7DWwUC5+xB6b2WfR9NIDsQBgrH9BwuKxVs2aEy6xA+xcMILDbi5pQHYOeJ0iRr4KOUbqls8TNjVF4cGy5/Wt4sqeq5K7Bp77MPYFNhmFzXPGLUcNXeAmjDQnvRBwwytOthEITgroJBWSclr5OqDjZ1qS/Nn4hgIRcT5ivRRmE9nevK5/umzAeaQk3JYYvHCLg/lL9I6WOO9+b880yjd3Gp1UU5Y8H6/UjfGBDrAzAd7McB5JjJrFmfxkqEzdgnF0AwMYXIYGCiHBxiopVSsFYUJaJGW7WtXuy0Djyfr5c9jH2SHoNkC7hPlgmZWRIcU1Mbt7im/K5KWD1PSUm+DJ6mnSQtfTGDfo7rC1VPRO8c+nhw3c71zCRXhcty2PMySa3lh3zHoIYvElqr9UTILJGdVIypeck4LGhF/mPFy1Bm9rdY4h6BK/6sTlGb1R4cMzRw69Og9BdnIr+uhWW+nL6Qmorwaq26ShtHdJvKyaeqDvdiFsQ3La8u/gx0dqHaD8W8nK1f9BGP8gBvI+FG0TCY4EY4r35vmBjBCS37XTfYXy9seHd1mPVWifSR8rnG+YLQuj9E5xf7rV/eGQEOqF18LLEn7ZCdLH3NAEsyGFVA23GcsWiMjMB7lEBr4VRXGSiPuGzso7BdWUnaVzSXFtrcupF2MY6ycRFV93Ko7Z5/zaReO4s3a63TdP0U9piguXXdWczdN4B0/iuaUM4jPzVU4An17jPZIdELq0yDJPAzqFmhvLzFdqIj6YUMuoDoj9FAlGAgh9N7SEuMZkXaTa4w7ELEyHvp7lBhxBBap1KCxJgWoBXAXrxOtbOmQMr+cmbmGALq41F9n6VFWyREN9kazPwvC9GG8fhS"
        }
      }
    } ],
    "settings" : {
      "version" : 0,
      "directories" : { },
      "api" : {
        "sessionTimeout" : {
          "duration" : 8,
          "units" : "Hours"
        }
      },
      "configuration" : {
        "scheme" : "http",
        "schemeCertificate" : "ssl-certificate-private-key",
        "port" : 45245,
        "centralConfig" : true,
        "autoSaveIntervalSeconds" : 60,
        "backupCopies" : 50
      },
      "hbMqttBroker" : {
        "enabled" : true,
        "allowAnonymous" : true,
        "endpoints" : [ {
          "hostname" : "0.0.0.0",
          "port" : 1885,
          "useSSL" : false,
          "certificateKeyAlias" : "app-certificate-private-key",
          "protocol" : "mqtt.tcp"
        }, {
          "hostname" : "0.0.0.0",
          "port" : 1886,
          "useSSL" : false,
          "certificateKeyAlias" : "",
          "protocol" : "mqtt.ws"
        } ]
      },
      "restDataServer" : {
        "enabled" : true,
        "hostname" : "0.0.0.0",
        "port" : 8885,
        "useHttps" : true,
        "schemeCertificate" : "app-certificate-private-key",
        "allowAnonymous" : true,
        "authenticationModes" : [ "API_KEY", "LOGIN" ],
        "mcpServerEnabled" : true,
        "mcpServerPort" : 45345
      },
      "log" : {
        "debugLogging" : "ALL",
        "fileSizeMB" : 100,
        "logAuditEvents" : false
      },
      "redundancy" : {
        "backup" : {
          "enabled" : false,
          "primary" : {
            "uri" : "",
            "pingIntervalSeconds" : 10,
            "pingAttempts" : 1
          }
        }
      },
      "expressionEngine" : {
        "allowExpressionEval" : false,
        "allowEnvironmentVariables" : true,
        "expressionEngineTimeoutSeconds" : 10,
        "hubBindingName" : "hub",
        "allowExpressionImports" : false
      },
      "backup" : {
        "enabled" : true,
        "cronSchedule" : "*/1 * * * *",
        "repo" : {
          "type" : "git",
          "name" : "HubBackup",
          "uri" : "https://github.com/taicho-hb/testRepo.git",
          "author" : "",
          "email" : "",
          "auth" : {
            "type" : "pass",
            "username" : "taicho",
            "password" : {
              "type" : "Encrypted",
              "value" : {
                "keyId" : "vrBpcHOKKwwsQER6zmCP9g==",
                "iv" : "lqqfSegaLEJsvfObaNZdxg==",
                "ciphertext" : "zRWXt0Tt3H3bNwtll55G6X/OBKbG9fmHIo+OcwXpcwtCaLcbYaeHhD8TvFOXlKlX"
              }
            }
          }
        },
        "branch" : "main",
        "deployFile" : "intelligencehub-deployment123.json"
      }
    }
  }
}